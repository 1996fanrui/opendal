var searchIndex = JSON.parse('{\
"opendal":{"doc":"OpenDAL is the Open Data Access Layer to <strong>freely</strong> access …","t":"QNNNDDDDINNDNNNNNNNNNNNNNNNDEDENNNNNNNNNNNNNNNNNDNNDENNNNNNNDDDNNNNNDNNGNNSENNNNNNNNNNNNDLMMMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLMLLMMMMLLLLLLLLLLLLLLLLLLAALLLLLLLLLLLLLLLLMLMLLMLMLLLLLLLLLLALLLLMMMLMMMMMMLLLLLLLLLLLLMLLLLALLLLLLLLLLLLLLLLLLLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLMMMMLLLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADDDDDDDDDDDDDIDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIDENEENNNNQQNQQNNNQQNDDNNNNNNDGDDNQIIQNDDDDDDDDDDDDEQQINEDNNQQNDDDDDDDDDDNNNSRNNQQALLLLLLLLLLLLLLLLLLLKLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLFLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFFFLALLLLLLKLLLFFFFFFFFFFFFLLFLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLKLLAAIDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLKLLLLLLLLKLLLLLLLLKLLLLLLLLLLLLIDDDDLLKLKLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLMLLLLLLLLLLLLLLLLLLLLLLKMKLLLLLLLLLLLLLLMLLLLLLLLMLKMLLLLLLLLLLLLLLLLLMLLLLLLNIDNNNIGINGNINGDNDDDDDNDIDNNIEGINIEGNNNIDGEDINEGKLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLFLLLFFFLLLLLLLLLKKKLLLLLLLLLLLLLKMLLLLKKLLLLLLKLLLLLKLLLLLLLKLLLLLLLLKLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLKKDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Accessor","AlreadyExists","Azblob","Azdfs","BlockingLister","BlockingOperator","BlockingReader","BlockingWriter","Builder","Cacache","CacheControl","Capability","Complete","ConditionNotMatch","ConfigInvalid","ContentDisposition","ContentIncomplete","ContentLength","ContentMd5","ContentRange","ContentTruncated","ContentType","Cos","Custom","DIR","Dashmap","Dropbox","Entry","EntryMode","Error","ErrorKind","Etag","Etcd","FILE","Foundationdb","Fs","Ftp","Gcs","Gdrive","Ghac","Hdfs","Http","InvalidInput","Ipfs","Ipmfs","IsADirectory","IsSameFile","LastModified","Lister","Memcached","Memory","Metadata","Metakey","MiniMoka","Mode","Moka","NotADirectory","NotFound","Obs","Onedrive","Operator","OperatorBuilder","OperatorInfo","Oss","PermissionDenied","Persy","Postgresql","RateLimited","Reader","Redb","Redis","Result","Rocksdb","S3","SCHEME","Scheme","Sftp","Sled","Supabase","Tikv","Unexpected","Unknown","Unsupported","VercelArtifacts","Version","Wasabi","Webdav","Webhdfs","Writer","abort","batch","batch_delete","batch_max_operations","bitand","bitor","bitxor","blocking","blocking","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cache_control","check","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","close","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","content_disposition","content_length","content_md5","content_range","content_type","copy","copy","copy","copy","create_dir","create_dir","create_dir","default","default","default","default","delete","delete","delete","delete_with","delete_with","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","docs","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","etag","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_map","from_map","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str","full_capability","get_hash","hash","info","info","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_parts","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_static","into_static","into_streaming_request","into_streaming_request","is_dir","is_dir","is_exist","is_exist","is_file","is_file","is_temporary","kind","last_modified","layer","layer","layers","limit","limit","list","list","list","list_with","list_with","list_with_delimiter_slash","list_with_limit","list_with_start_after","list_without_delimiter","lister","lister","lister_with","lister_with","map","metadata","mode","name","name","native_capability","new","new","new","new","next","next","next","not","operator_functions","operator_futures","path","poll_close","poll_complete","poll_flush","poll_flush","poll_next","poll_next","poll_next","poll_read","poll_read","poll_read","poll_seek","poll_seek","poll_shutdown","poll_write","poll_write","presign","presign_read","presign_read","presign_read_with","presign_stat","presign_stat","presign_write","presign_write","presign_write_with","provide","range_read","range_read","range_reader","range_reader","ratelimit_stream","ratelimit_stream","ratelimit_stream_with_jitter","ratelimit_stream_with_jitter","raw","read","read","read","read","read","read_can_next","read_can_seek","read_with","read_with_if_match","read_with_if_none_match","read_with_override_cache_control","read_with_override_content_disposition","read_with_override_content_type","read_with_range","reader","reader","reader_with","rem","remove","remove","remove_all","remove_all","remove_via","remove_via","rename","rename","rename","root","scheme","seek","seek","services","set_cache_control","set_content_disposition","set_content_length","set_content_md5","set_content_range","set_content_type","set_etag","set_last_modified","set_mode","set_permanent","set_persistent","set_source","set_temporary","set_version","sink","source","start_seek","stat","stat","stat","stat_with","stat_with_if_match","stat_with_if_none_match","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll_next","try_poll_next","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","via_map","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_cache_control","with_content_disposition","with_content_length","with_content_md5","with_content_range","with_content_type","with_context","with_etag","with_last_modified","with_limit","with_limit","with_mode","with_operation","with_version","write","write","write","write","write","write","write","write_can_append","write_can_sink","write_with","write_with","write_with_cache_control","write_with_content_disposition","write_with_content_type","write_without_content_length","writer","writer","writer_with","changelog","comparisons","concepts","features","internals","rfcs","upgrade","vs_object_store","accessor","layer","rfc_0000_example","rfc_0041_object_native_api","rfc_0044_error_handle","rfc_0057_auto_region","rfc_0069_object_stream","rfc_0090_limited_reader","rfc_0112_path_normalization","rfc_0191_async_streaming_io","rfc_0203_remove_credential","rfc_0221_create_dir","rfc_0247_retryable_error","rfc_0293_object_id","rfc_0337_dir_entry","rfc_0409_accessor_capabilities","rfc_0413_presign","rfc_0423_command_line_interface","rfc_0429_init_from_iter","rfc_0438_multipart","rfc_0443_gateway","rfc_0501_new_builder","rfc_0554_write_refactor","rfc_0561_list_metadata_reuse","rfc_0599_blocking_api","rfc_0623_redis_service","rfc_0627_split_capabilities","rfc_0661_path_in_accessor","rfc_0793_generic_kv_services","rfc_0926_object_reader","rfc_0977_refactor_error","rfc_1085_object_handler","rfc_1391_object_metadataer","rfc_1398_query_based_metadata","rfc_1420_object_writer","rfc_1477_remove_object_concept","rfc_1735_operation_extension","rfc_2083_writer_sink_api","rfc_2133_append_api","rfc_2299_chain_based_operator_api","rfc_2602_object_versioning","rfc_2758_merge_append_into_write","rfc_2774_lister_api","rfc_2779_list_with_metakey","rfc_2852_native_capability","AsyncBacktraceLayer","AwaitTreeLayer","BlockingLayer","ChaosLayer","ConcurrentLimitLayer","ImmutableIndexLayer","LoggingLayer","MadsimLayer","MadsimServer","MetricsLayer","MinitraceLayer","OtelTraceLayer","PrometheusLayer","RetryInterceptor","RetryLayer","ThrottleLayer","TimeoutLayer","TracingLayer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","create","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","extend_iter","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insert","intercept","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","layer","layer","layer","layer","layer","layer","layer","layer","layer","layer","layer","layer","layer","layer","layer","layer","new","new","new","new","new","new","new","serve","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_backtrace_output","with_error_level","with_factor","with_failure_level","with_jitter","with_max_delay","with_max_times","with_min_delay","with_notify","with_registry","with_speed","with_timeout","FunctionDelete","FunctionList","FunctionLister","FunctionWrite","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","call","call","call","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","content_length","content_type","delimiter","delimiter","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","limit","limit","metakey","metakey","start_after","start_after","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","FutureDelete","FutureList","FutureLister","FuturePresignRead","FuturePresignWrite","FutureRead","FutureReader","FutureStat","FutureWrite","FutureWriter","append","append","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cache_control","cache_control","cache_control","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","content_disposition","content_disposition","content_disposition","content_length","content_length","content_length","content_type","content_type","content_type","delimiter","delimiter","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from","from","if_match","if_match","if_match","if_match","if_none_match","if_none_match","if_none_match","if_none_match","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","limit","metakey","metakey","override_cache_control","override_cache_control","override_cache_control","override_content_disposition","override_content_disposition","override_content_disposition","override_content_type","override_content_type","override_content_type","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","range","range","range","start_after","start_after","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","version","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Accessor","AccessorInfo","AsyncBody","Batch","BatchOperation","BatchedReply","BlockingCopy","BlockingCreateDir","BlockingDelete","BlockingList","BlockingPager","BlockingPager","BlockingRead","BlockingReader","BlockingReader","BlockingRename","BlockingStat","BlockingWrite","BlockingWriter","BlockingWriter","Bytes","BytesContentRange","BytesRange","Copy","CreateDir","Delete","Delete","Delete","Empty","FormDataPart","FusedAccessor","HttpClient","IncomingAsyncBody","Info","Inner","Layer","LayeredAccessor","LayeredAccessor","List","MixedPart","Multipart","OpBatch","OpCopy","OpCreateDir","OpDelete","OpList","OpPresign","OpRead","OpRename","OpStat","OpWrite","Operation","Pager","Pager","Part","Presign","PresignOperation","PresignedRequest","Read","Read","Reader","Reader","Rename","RpBatch","RpCopy","RpCreateDir","RpDelete","RpList","RpPresign","RpRead","RpRename","RpStat","RpWrite","Stat","Stat","Stream","TYPE","VERSION","Write","Write","Writer","Writer","adapters","append","apply","apply_on_bytes","batch","batch","batch","batch","blocking_copy","blocking_copy","blocking_copy","blocking_copy","blocking_create_dir","blocking_create_dir","blocking_create_dir","blocking_create_dir","blocking_delete","blocking_delete","blocking_delete","blocking_delete","blocking_list","blocking_list","blocking_list","blocking_read","blocking_read","blocking_read","blocking_rename","blocking_rename","blocking_rename","blocking_rename","blocking_stat","blocking_stat","blocking_stat","blocking_stat","blocking_write","blocking_write","blocking_write","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_abs_path","build_header_value","build_rel_path","build_rooted_abs_path","bytes","cache_control","client","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","consume","content","content","content_disposition","content_length","content_type","copy","copy","copy","copy","create_dir","create_dir","create_dir","create_dir","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","delete","delete","delete","delete","delimiter","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expire","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","format","format_authorization_by_basic","format_authorization_by_bearer","format_content_md5","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes_range","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_request","from_str","from_str","full_capability","full_capability_mut","get_basename","get_hash","get_parent","hash","header","header","header","if_match","if_match","if_none_match","if_none_match","info","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_metadata","into_metadata","into_operation","into_parts","into_presigned_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_response","into_results","into_static","is_full","layer","len","limit","list","list","list","map_metadata","metadata","metadata","metadata","metakey","method","method","name","native_capability","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_json_deserialize_error","new_json_serialize_error","new_request_build_error","new_request_credential_error","new_request_sign_error","new_xml_deserialize_error","normalize_path","normalize_root","offset","oio","operation","operation","operation","override_cache_control","override_content_disposition","override_content_type","parse","parse","parse","parse","parse_content_disposition","parse_content_length","parse_content_md5","parse_content_range","parse_content_type","parse_datetime_from_from_timestamp_millis","parse_datetime_from_rfc2822","parse_datetime_from_rfc3339","parse_etag","parse_into_metadata","parse_last_modified","parse_location","part","part_header","percent_encode_path","poll_next","poll_read","poll_seek","presign","presign","presign","presign","range","range","range_inclusive","read","read","read","rename","rename","rename","rename","results","root","scheme","send","serialize","set_full_capability","set_name","set_root","set_scheme","size","size","start_after","stat","stat","stat","stat","to_bytes_range","to_header","to_header","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_range","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uri","validate_path","version","version","version","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_append","with_boundary","with_cache_control","with_content_disposition","with_content_length","with_content_type","with_delimiter","with_error_response_context","with_if_match","with_if_match","with_if_none_match","with_if_none_match","with_limit","with_metadata","with_metakey","with_override_cache_control","with_override_content_disposition","with_override_content_type","with_range","with_range","with_size","with_start_after","with_version","with_version","with_version","write","write","write","kv","typed_kv","Adapter","Backend","Metadata","append","append","blocking_append","blocking_append","blocking_copy","blocking_create_dir","blocking_delete","blocking_delete","blocking_delete","blocking_get","blocking_get","blocking_list","blocking_read","blocking_rename","blocking_scan","blocking_scan","blocking_set","blocking_set","blocking_stat","blocking_write","borrow","borrow","borrow_mut","borrow_mut","capabilities","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","copy","create_dir","delete","delete","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","from_ref","get","info","init","init","into","into","into_request","into_request","list","metadata","name","new","new","read","rename","scan","scan","scheme","set","stat","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_root","write","Adapter","Backend","Capability","Info","Value","blocking_copy","blocking_create_dir","blocking_delete","blocking_delete","blocking_get","blocking_list","blocking_read","blocking_rename","blocking_scan","blocking_scan","blocking_set","blocking_stat","blocking_write","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capabilities","clone","clone","clone","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","copy","create_dir","default","delete","delete","delete","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","from","from","from","from","from_ref","from_ref","from_ref","get","get","info","info","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","list","metadata","name","new","new","new_dir","read","rename","scan","scan","scan","scheme","set","set","size","stat","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","with_root","write","Abort","AppendObjectWrite","AppendObjectWriter","BlockingClose","BlockingNext","BlockingNext","BlockingPage","BlockingPager","BlockingRead","BlockingRead","BlockingReader","BlockingSeek","BlockingWrite","BlockingWrite","BlockingWriter","ByRangeSeekableReader","Close","Cursor","Entry","FlatPager","FromFileReader","HierarchyPager","Left","MultipartUploadPart","MultipartUploadWrite","MultipartUploadWriter","Next","Next","Page","PageOperation","Pager","Read","Read","ReadExt","ReadOperation","Reader","Right","Seek","Sink","Stream","StreamableReader","Streamer","TwoWaysWriter","VectorCursor","Write","Write","WriteOperation","Writer","abort","abort","abort","abort","abort_part","append","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","close","close","close","close","close","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","complete_part","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","etag","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","get_hash","get_hash","get_hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initiate_part","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_flat_page","into_hierarchy_page","into_read_from_file","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_seekable_read_by_range","into_static","into_static","into_static","into_stream","into_stream_from_reader","into_streamable_read","is_empty","is_empty","len","mode","new","new","new","new","new","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","offset","part_number","path","peak_all","peak_at_least","peak_exact","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_seek","poll_seek","poll_seek","poll_seek","poll_seek","poll_seek","pop","push","read","read","read","read","read","read","read","read","remaining_slice","seek","seek","seek","seek","seek","seek","seek","seek","set_mode","set_path","sink","sink","sink","sink","take","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with","with_write_min_size","with_write_min_size","write","write","write","write","write","write_once","write_part","Azblob","Azdfs","Cacache","Cos","Dashmap","Dropbox","Etcd","Foundationdb","Fs","Ftp","Gcs","Gdrive","Ghac","Hdfs","Http","Ipfs","Ipmfs","Memcached","Memory","MiniMoka","Moka","Obs","Onedrive","Oss","Persy","Postgresql","Redb","Redis","Rocksdb","S3","Sftp","Sled","Supabase","Tikv","VercelArtifacts","Wasabi","Webdav","Webhdfs","access_key_id","access_key_id","access_key_id","access_key_id","access_key_secret","access_token","access_token","access_token","access_token","account_key","account_key","account_name","account_name","allow_anonymous","atomic_write_dir","batch_max_operations","batch_max_operations","batch_max_operations","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bucket","bucket","bucket","bucket","bucket","bucket","bucket","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","ca_path","ca_path","cert_path","cert_path","client_id","client_secret","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cluster_endpoints","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","config_path","connection_string","container","credential","credential_path","customed_credential_load","customed_credential_load","customed_token_loader","datadir","datadir","datadir","datadir","datafile","db","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_storage_class","default_storage_class","default_storage_class","default_ttl","default_ttl","delegation","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","detect_region","disable_config_load","disable_config_load","disable_config_load","disable_ec2_metadata","disable_ec2_metadata","disable_list_batch","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","enable_copy","enable_create_simulation","enable_path_check","enable_virtual_host_style","enable_virtual_host_style","encryption_algorithm","encryption_key","encryption_key_sha256","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoints","endpoints","external_id","external_id","filesystem","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_connection_string","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","index","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insecure","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kerberos_ticket_cache_path","key","key","key_field","key_path","key_path","known_hosts_strategy","max_capacity","max_capacity","name","name_node","password","password","password","password","password","predefined_acl","presign_endpoint","refresh_token","region","region","role_arn","role_arn","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","sas_token","scope","secret_access_key","secret_access_key","secret_access_key","secret_id","secret_key","security_token","security_token","segment","segments","server_side_encryption","server_side_encryption","server_side_encryption","server_side_encryption_aws_kms_key_id","server_side_encryption_aws_kms_key_id","server_side_encryption_customer_algorithm","server_side_encryption_customer_algorithm","server_side_encryption_customer_key","server_side_encryption_customer_key","server_side_encryption_customer_key_md5","server_side_encryption_customer_key_md5","server_side_encryption_key_id","server_side_encryption_with_aws_managed_kms_key","server_side_encryption_with_aws_managed_kms_key","server_side_encryption_with_customer_key","server_side_encryption_with_customer_key","server_side_encryption_with_customer_key","server_side_encryption_with_customer_managed_kms_key","server_side_encryption_with_customer_managed_kms_key","server_side_encryption_with_s3_key","server_side_encryption_with_s3_key","service_account","table","table","thread_pool_enabled","time_to_idle","time_to_idle","time_to_live","time_to_live","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","token","token","tree","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user","user","user","username","username","username","username","value_field","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_fixed_size","write_min_size","write_min_size","write_min_size","write_min_size"],"q":[[0,"opendal"],[689,"opendal::docs"],[696,"opendal::docs::comparisons"],[697,"opendal::docs::internals"],[699,"opendal::docs::rfcs"],[742,"opendal::layers"],[1143,"opendal::operator_functions"],[1226,"opendal::operator_futures"],[1470,"opendal::raw"],[2524,"opendal::raw::adapters"],[2526,"opendal::raw::adapters::kv"],[2607,"opendal::raw::adapters::typed_kv"],[2734,"opendal::raw::oio"],[3185,"opendal::services"]],"d":["The accessor that built by this builder.","The given path already exists thus we failed to the …","azblob: Azure Storage Blob services.","azdfs: Azure Data Lake Storage Gen2.","BlockingLister is designed to list entries at given path …","BlockingOperator is the entry for all public blocking APIs.","BlockingReader is designed to read data from given path in …","BlockingWriter is designed to write data into given path …","Builder is used to set up a real underlying service, i.e. …","cacache: cacache backend support.","Key for cache control.","Capability is used to describe what operations are …","The special metadata key that used to mark this entry …","The condition of this operation is not match.","The config for backend is invalid.","Key for content disposition.","The content is incomplete.","Key for content length.","Key for content md5.","Key for content range.","The content is truncated.","Key for content type.","cos: Tencent Cloud Object Storage services.","Custom that allow users to implement services outside of …","DIR means the path can be listed.","dashmap: dashmap backend support.","dropbox: Dropbox services.","Entry returned by <code>Lister</code> or <code>BlockingLister</code> to represent a …","EntryMode represents the mode.","Error is the error struct returned by all opendal …","ErrorKind is all kinds of Error of opendal.","Key for etag.","etcd: Etcd Services","FILE means the path has data to read.","foundationdb: Foundationdb services.","fs: POSIX alike file system.","ftp: FTP backend.","gcs: Google Cloud Storage backend.","gdrive: GoogleDrive services.","ghac: GitHub Action Cache services.","hdfs: Hadoop Distributed File System.","http: HTTP backend.","The input is invalid.","ipmfs: IPFS HTTP Gateway","ipmfs: IPFS mutable file system","The given path is a directory.","The given file paths are same.","Key for last last modified.","Lister is designed to list entries at given path in an …","memcached: Memcached service support.","memory: In memory backend support.","Metadata carries all metadata associated with a path.","Metakey describes the metadata keys that can be stored or …","mini-moka: Mini Moka backend support.","Key for mode.","moka: moka backend support.","The given path is not a directory.","The given path is not found.","obs: Huawei Cloud OBS services.","onedrive: Microsoft OneDrive services.","Operator is the entry for all public async APIs.","OperatorBuilder is a typed builder to build an Operator.","Metadata for operator, users can use this metadata to get …","oss: Aliyun Object Storage Services","The given path doesn’t have enough permission for this …","persy: persy backend support.","postgresql: Postgresql services","Requests that sent to this path is over the limit, please …","Reader is designed to read data from given path in an …","redb: Redb Services","redis: Redis services","Result that is a wrapper of <code>Result&lt;T, opendal::Error&gt;</code>","rocksdb: RocksDB services","s3: AWS S3 alike services.","Associated scheme for this builder. It indicates what …","Services that OpenDAL supports","sftp: SFTP services","sled: Sled services","Supabase: Supabase storage service","[tikv][crate::services::tikv]: Tikv Services","OpenDAL don’t know what happened here, and no actions …","Unknown means we don’t know what we can do on this path.","Underlying service doesn’t support this operation.","Vercel Artifacts: Vercel Artifacts service, as known as …","Key for version.","wasabi: Wasabi service","webdav: WebDAV support.","webhdfs: WebHDFS RESTful API Services","Writer is designed to write data into given path in an …","Abort the writer and clean up all written data.","If operator supports batch , it will be true.","If operator supports batch delete , it will be true.","The max operations that operator supports in batch.","","","","Create a new blocking operator.","If operator supports blocking , it will be true.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the accessor builder to build a service.","Cache control of this entry. Cache-Control is defined by …","Check if this operator can work correctly.","","","","","","","","","","","","","","","","","","","","","Close the writer and make sure all data have been …","Close the writer and make sure all data have been stored.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Content-Disposition of this entry","Content length of this entry.","Content MD5 of this entry.","Content Range of this entry.","Content Type of this entry.","Copy into writer.","Copy a file from <code>from</code> to <code>to</code>.","Copy a file from <code>from</code> to <code>to</code>.","If operator supports copy , it will be true.","Create a dir at given path.","Create a dir at given path.","If operator supports create dir , it will be true.","","","","","Delete the given path.","Delete given path.","If operator supports delete , it will be true.","Delete the given path with extra options.","Delete given path with options.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module holds documentation for OpenDAL.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ETag of this entry.","Finish the building to construct an Operator.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Construct a builder from given map which contains several …","Create a new operator from given map.","","","","","","","","","","","","Get [<code>Full Capability</code>] of operator.","","","Get information of underlying accessor.","Get information of underlying accessor.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Consume this entry to get it’s path and metadata.","","","","","","","","","","","","","","","","","","","Convert self into static str.","Convert self into static str.","","","Check if this mode is DIR.","Returns <code>true</code> if this metadata is for a directory.","Check if this path exists or not.","Check if this path exists or not.","Check if this mode is FILE.","Returns <code>true</code> if this metadata is for a file.","Check if this error is temporary.","Return error’s kind.","Last modified of this entry.","Create a new layer with static dispatch.","Create a new layer with dynamic dispatch.","<code>Layer</code> is the mechanism to intercept operations.","Get current operator’s limit. Limit is usually the …","Get current operator’s limit","List entries within a given directory.","List entries within a given directory.","If operator supports list , it will be true.","List entries within a given directory with options.","List entries within a given directory with options.","If backend support list with using slash as delimiter.","If backend supports list with limit, it will be true.","If backend supports list with start after, it will be true.","If backend supports list without delimiter.","List entries within a given directory as a stream.","List entries within a given directory as an iterator.","List entries within a given directory as a stream with …","List entries within a given directory as an iterator with …","Operate on error with map.","Fetch metadata of this entry.","mode represent this entry’s mode.","Name of entry. Name is the last segment of path.","Name of backend, could be empty if underlying backend doesn…","Get [<code>Native Capability</code>] of operator.","Create a new operator builder.","Create a new Error with error kind and message.","Create a new metadata","Create a new operator with input builder.","","","","","Functions provides the functions generated by …","Futures provides the futures generated by <code>Operator</code>","Path of entry. Path is relative to operator’s root.","","","Writer makes sure that every write is flushed.","","","","","","","","","","","","","If operator supports presign , it will be true.","Presign an operation for read.","If operator supports presign read , it will be true.","Presign an operation for read option described in OpenDAL …","Presign an operation for stat(head).","If operator supports presign stat , it will be true.","Presign an operation for write.","If operator supports presign write , it will be true.","Presign an operation for write with option described in …","","Read the specified range of path into a bytes.","Read the specified range of path into a bytes.","Create a new reader which can read the specified range.","Create a new reader which can read the specified range.","","","","","Raw modules provide raw APIs that used by underlying …","","","Read the whole path into a bytes.","Read the whole path into a bytes.","If operator supports read , it will be true.","If operator supports next on returning reader , it will be …","If operator supports seek on returning reader , it will be …","Read the whole path into a bytes with extra options.","If operator supports read with if match , it will be true.","If operator supports read with if none match , it will be …","if operator supports read with override cache control , it …","if operator supports read with override content …","if operator supports read with override content type , it …","If operator supports read with range , it will be true.","Create a new reader which can read the whole path.","Create a new reader which can read the whole path.","Create a new reader with extra options","","Notes","Notes","Remove the path and all nested dirs and files recursively.","Remove the path and all nested dirs and files recursively.","remove will remove files via the given paths.","remove will remove files via the given paths.","Rename a file from <code>from</code> to <code>to</code>.","Rename a file from <code>from</code> to <code>to</code>.","If operator supports rename , it will be true.","Root of operator, will be in format like <code>/path/to/dir/</code>","<code>Scheme</code> of operator.","","","Services will provide builders to build underlying …","Set cache control of this entry.","Set Content-Disposition of this entry","Set content length of this entry.","Set content MD5 of this entry.","Set Content Range of this entry.","Set Content Type of this entry.","Set ETag of this entry.","Set Last modified of this entry.","Set mode for entry.","Set permanent status for error.","Set persistent status for error.","Set source for error.","Set temporary status for error.","Set version of this entry.","Sink into writer.","","","Get current path’s metadata.","Get current path’s metadata.","If operator supports stat , it will be true.","Get current path’s metadata <strong>without cache</strong> directly with …","If operator supports stat with if match , it will be true.","If operator supports stat with if none match , it will be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Version of this entry.","Create a new operator from given scheme and map.","","","","","","","","","","","","","","","","","","","Set cache control of this entry.","Set Content-Disposition of this entry","Set content length of this entry.","Set content MD5 of this entry.","Set Content Range of this entry.","Set Content Type of this entry.","Add more context in error.","Set ETag of this entry.","Set Last modified of this entry.","Specify the batch limit.","Specify the batch limit.","Set mode for entry.","Update error’s operation.","Set version of this entry.","Write into inner writer.","","","Write into inner writer.","Write bytes into path.","Write bytes into given path.","If operator supports write , it will be true.","If operator supports write by append, it will be true.","If operator supports write by sink a stream into, it will …","Write data with extra options.","Write data with option described in OpenDAL rfc-0661","If operator supports write with cache control , it will be …","If operator supports write with content disposition , it …","If operator supports write with content type , it will be …","If operator supports write with without content length, it …","Write multiple bytes into path.","Write multiple bytes into given path.","Write multiple bytes into path with extra options.","Changes log for all OpenDAL released versions.","Compare opendal with other projects to find out the …","The core concepts of OpenDAL’s public API.","All features that provided by OpenDAL.","The internal implement details of OpenDAL.","RFCs power OpenDAL’s development.","Upgrade and migrate procedures while OpenDAL meets …","OpenDAL vs object_store","The internal implementation details of <code>Accessor</code>.","The internal implementation details of <code>Layer</code>.","Proposal Name: (fill me in with a unique ident, …","Proposal Name: <code>object_native_api</code>Start Date: 2022-02-18RFC …","Proposal Name: <code>error_handle</code>Start Date: 2022-02-23RFC PR: …","Proposal Name: <code>auto_region</code>Start Date: 2022-02-24RFC PR: …","Proposal Name: <code>object_stream</code>Start Date: 2022-02-25RFC PR: …","Proposal Name: <code>limited_reader</code>Start Date: 2022-03-02RFC PR: …","Proposal Name: <code>path-normalization</code>Start Date: 2022-03-08RFC …","Proposal Name: <code>async_streaming_io</code>Start Date: 2022-03-28RFC …","Proposal Name: <code>remove_credential</code>Start Date: 2022-04-02RFC …","Proposal Name: <code>create-dir</code>Start Date: 2022-04-06RFC PR: …","Proposal Name: <code>retryable_error</code>Start Date: 2022-04-12RFC …","Proposal Name: <code>object_id</code>Start Date: 2022-05-27RFC PR: …","Proposal Name: <code>dir_entry</code>Start Date: 2022-06-08RFC PR: …","Proposal Name: <code>accessor_capabilities</code>Start Date: 2022-06-29…","Proposal Name: <code>presign</code>Start Date: 2022-06-30RFC PR: …","Proposal Name: <code>command_line_interface</code>Start Date: 2022-07-08…","Proposal Name: <code>init_from_iter</code>Start Date: 2022-07-10RFC PR: …","Proposal Name: <code>multipart</code>Start Date: 2022-07-11RFC PR: …","Proposal Name: <code>gateway</code>Start Date: 2022-07-18RFC PR: …","Proposal Name: <code>new_builder</code>Start Date: 2022-08-03RFC PR: …","Proposal Name: <code>write_refactor</code>Start Date: 2022-08-22RFC PR: …","Proposal Name: <code>list_metadata_reuse</code>Start Date: 2022-08-23…","Proposal Name: <code>blocking_api</code>Start Date: 2022-08-30RFC PR: …","Proposal Name: <code>redis_service</code>Start Date: 2022-08-31RFC PR: …","Proposal Name: <code>split-capabilities</code>Start Date: 2022-09-04RFC …","Proposal Name: <code>path_in_accessor</code>Start Date: 2022-09-12RFC …","Proposal Name: <code>generic-kv-services</code>Start Date: 2022-10-03…","Proposal Name: <code>object_reader</code>Start Date: 2022-11-13RFC PR: …","Proposal Name: <code>refactor-error</code>Start Date: 2022-11-21RFC PR: …","Proposal Name: <code>object_handler</code>Start Date: 2022-12-19RFC PR: …","Proposal Name: <code>object_metadataer</code>Start Date: 2023-02-21RFC …","Proposal Name: <code>query_based_metadata</code>Start Date: 2022-02-22…","Proposal Name: <code>object_writer</code>Start Date: 2023-02-27RFC PR: …","Proposal Name: <code>remove_object_concept</code>Start Date: <code>2023-03-05</code>…","Proposal Name: <code>operation_extension</code>Start Date: 2023-03-23…","Proposal Name: <code>writer_sink_api</code>Start Date: 2023-04-23RFC …","Proposal Name: <code>append_api</code>Start Date: 2023-04-26RFC PR: …","Proposal Name: <code>chain_based_operator_api</code>Start Date: …","Proposal Name: object_versioningStart Date: 2023-07-06RFC …","Proposal Name: <code>merge_append_into_write</code>Start Date: …","Proposal Name: <code>lister_api</code>Start Date: 2023-08-04RFC PR: …","Proposal Name: <code>list_with_metakey</code>Start Date: 2023-08-04RFC …","Proposal Name: <code>native_capability</code>Start Date: 2023-08-11RFC …","Add Efficient, logical ‘stack’ traces of async …","Add a Instrument await-tree for actor-based applications …","Add blocking API support for every operations.","Inject chaos into underlying services for robustness test.","Add concurrent request limit.","Add an immutable in-memory index for underlying storage …","Add log for every operations.","Add deterministic simulation for async operations, powered …","A simulated server.This an experimental feature, docs are …","Add metrics for every operations.","Add minitrace for every operations.","Add opentelemetry::trace for every operations.","Add prometheus for every operations.","RetryInterceptor is used to intercept while retry happened.","Add retry for temporary failed operations.","Add a bandwidth rate limiter to the underlying services.","Add timeout for every operations.","Add tracing for every operations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new <code>BlockingLayer</code> with the current runtime’s …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Insert keys from iter.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Insert a key into index.","Everytime RetryLayer is retrying, this function will be …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new retry layer.","Create a new ConcurrentLimitLayer will specify permits","Create a new <code>TimeoutLayer</code> with default settings.","Create a new chaos layer with specified error ratio.","Create new madsim layer","Create a new <code>ThrottleLayer</code> with given bandwidth and burst.","Create a new <code>AwaitTreeLayer</code>.","Start serving as madsim server.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Setting whether to output backtrace while unexpected …","Setting the log level while expected error happened.","Set factor of current backoff.","Setting the log level while unexpected failure happened.","Set jitter of current backoff.","Set max_delay of current backoff.","Set max_times of current backoff.","Set min_delay of current backoff.","Set the retry interceptor as new notify.","create PrometheusLayer by incoming registry.","Set speed for TimeoutLayer with given value.","Set timeout for TimeoutLayer with given value.","Function that generated by <code>BlockingOperator::delete_with</code>.","Function that generated by <code>BlockingOperator::list_with</code>.","Function that generated by <code>BlockingOperator::lister_with</code>.","Function that generated by <code>BlockingOperator::write_with</code>.","","","","","","","","","Call the function to consume all the input and generate a …","Call the function to consume all the input and generate a …","Call the function to consume all the input and generate a …","Call the function to consume all the input and generate a …","","","","","","","","","","","","","Set the content length for this operation.","Set the content type for this operation.","Change the delimiter. The default delimiter is “/”","Change the delimiter. The default delimiter is “/”","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Change the limit of this list operation.","Change the limit of this list operation.","Change the metakey. The default metakey is <code>Metakey::Mode</code>.","Change the metakey. The default metakey is <code>Metakey::Mode</code>.","Change the start_after of this list operation.","Change the start_after of this list operation.","","","","","","","","","","","","","Set the version for this operation.","","","","","Future that generated by <code>Operator::delete_with</code>.","Future that generated by <code>Operator::list_with</code>.","Future that generated by <code>Operator::lister_with</code>.","Future that generated by <code>Operator::presign_read_with</code>.","Future that generated by <code>Operator::presign_read_with</code>.","Future that generated by <code>Operator::read_with</code>.","Future that generated by <code>Operator::reader_with</code>.","Future that generated by <code>Operator::stat_with</code>.","Future that generated by <code>Operator::write_with</code>.","Future that generated by <code>Operator::writer_with</code>.","Set the append mode of op.","Set the append mode of op.","","","","","","","","","","","","","","","","","","","","","Set the content type of option","Set the content type of option","Set the content type of option","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the content disposition of option","Set the content disposition of option","Set the content disposition of option","Set the content length of op.","Set the content length of op.","Set the content length of op.","Set the content type of option","Set the content type of option","Set the content type of option","Change the delimiter. The default delimiter is “/”","Change the delimiter. The default delimiter is “/”","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Set the If-Match for this operation.","Set the If-Match of the option","Set the If-Match for this operation.","Set the If-Match for this operation.","Set the If-None-Match for this operation.","Set the If-None-Match of the option","Set the If-None-Match for this operation.","Set the If-None-Match for this operation.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Change the limit of this list operation.","Change the metakey. The default metakey is <code>Metakey::Mode</code>.","Change the metakey. The default metakey is <code>Metakey::Mode</code>.","Sets the cache-control header that should be send back by …","Sets the cache-control header that should be send back by …","Sets the cache-control header that should be send back by …","Sets the content-disposition header that should be send …","Sets the content-disposition header that should be send …","Sets the content-disposition header that should be send …","Sets the content-type header that should be send back by …","Sets the content-type header that should be send back by …","Sets the content-type header that should be send back by …","","","","","","","","","","","Create a new OpRead with range.","Set the range header for this operation.","Set the range header for this operation.","Change the start_after of this list operation.","Change the start_after of this list operation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the version for this operation.","Set the version for this operation.","Change the version of this delete operation.","","","","","","","","","","","Underlying trait of all backends for implementors.","Metadata for accessor, users can use this metadata to get …","Body used in async HTTP requests.","Operation for <code>crate::raw::Accessor::batch</code>","Batch operation used for batch.","Batch results of <code>batch</code> operations.","Operation for <code>crate::raw::Accessor::blocking_copy</code>","Operation for <code>crate::raw::Accessor::blocking_create_dir</code>","Operation for <code>crate::raw::Accessor::blocking_delete</code>","Operation for <code>crate::raw::Accessor::blocking_list</code>","BlockingPager is the associated pager that could return in …","","Operation for <code>crate::raw::Accessor::blocking_read</code>","BlockingReader is the associated reader that could return …","","Operation for <code>crate::raw::Accessor::blocking_rename</code>","Operation for <code>crate::raw::Accessor::blocking_stat</code>","Operation for <code>crate::raw::Accessor::blocking_write</code>","BlockingWriter is the associated writer the could return in","","Body with bytes.","BytesContentRange is the content range of bytes.","BytesRange(offset, size) carries a range of content.","Operation for <code>crate::raw::Accessor::copy</code>","Operation for <code>crate::raw::Accessor::create_dir</code>","results of <code>delete batch</code> operation","Operation for <code>crate::raw::Accessor::delete</code>","Batch delete operation.","An empty body.","FormDataPart is a builder for multipart/form-data part.","FusedAccessor is the type erased accessor with …","HttpClient that used across opendal.","IncomingAsyncBody carries the content returned by remote …","Operation for <code>crate::raw::Accessor::info</code>","","Layer is used to intercept the operations on the …","LayeredAccessor is layered accessor that forward all not …","The layered accessor that returned by this layer.","Operation for <code>crate::raw::Accessor::list</code>","MixedPart is a builder for multipart/mixed part.","Multipart is a builder for multipart/form-data.","Args for <code>batch</code> operation.","Args for <code>copy</code> operation.","Args for <code>create</code> operation.","Args for <code>delete</code> operation.","Args for <code>list</code> operation.","Args for <code>presign</code> operation.","Args for <code>read</code> operation.","Args for <code>rename</code> operation.","Args for <code>stat</code> operation.","Args for <code>write</code> operation.","Operation is the name for APIs in <code>Accessor</code>.","Pager is the associated page that return in <code>list</code> operation.","","Part is a trait for multipart part.","Operation for <code>crate::raw::Accessor::presign</code>","Presign operation used for presign.","PresignedRequest is a presigned request return by <code>presign</code>.","Operation for <code>crate::raw::Accessor::read</code>","Presign a read operation.","Reader is the associated reader the could return in <code>read</code> …","","Operation for <code>crate::raw::Accessor::rename</code>","Reply for <code>batch</code> operation.","Reply for <code>copy</code> operation.","Reply for <code>create_dir</code> operation","Reply for <code>delete</code> operation","Reply for <code>list</code> operation.","Reply for <code>presign</code> operation.","Reply for <code>read</code> operation.","Reply for <code>rename</code> operation.","Reply for <code>stat</code> operation.","Reply for <code>write</code> operation.","Operation for <code>crate::raw::Accessor::stat</code>","Presign a stat(head) operation.","Body with stream.","TYPE is the type of multipart.","VERSION is the compiled version of OpenDAL.","Operation for <code>crate::raw::Accessor::write</code>","Presign a write operation.","Writer is the associated writer the could return in <code>write</code> …","","Providing adapters and its implementations.","Get the append from op.","Consume the input and generate a request with multipart …","apply_on_bytes will apply range on bytes.","Invoke the <code>batch</code> operations.","Invoke the <code>batch</code> operations.","","","Invoke the <code>blocking_copy</code> operation on the specified <code>from</code> …","Invoke the <code>blocking_copy</code> operation on the specified <code>from</code> …","","","Invoke the <code>blocking_create</code> operation on the specified path.","Invoke the <code>blocking_create</code> operation on the specified path.","","","Invoke the <code>blocking_delete</code> operation on the specified path.","Invoke the <code>blocking_delete</code> operation on the specified path.","","","","Invoke the <code>blocking_list</code> operation on the specified path.","Invoke the <code>blocking_list</code> operation on the specified path.","","Invoke the <code>blocking_read</code> operation on the specified path.","Invoke the <code>blocking_read</code> operation on the specified path.","Invoke the <code>blocking_rename</code> operation on the specified <code>from</code> …","Invoke the <code>blocking_rename</code> operation on the specified <code>from</code> …","","","Invoke the <code>blocking_stat</code> operation on the specified path.","Invoke the <code>blocking_stat</code> operation on the specified path.","","","","Invoke the <code>blocking_write</code> operation on the specified path.","Invoke the <code>blocking_write</code> operation on the specified path.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build a new http client in async context.","build_abs_path will build an absolute path with root.","Build header value from given string.","build_rel_path will build a relative path towards root.","build_rooted_abs_path will build an absolute path with …","Consume the response to bytes.","Get the cache control from option","Get the async client from http client.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the entire body.","Set the content for this part.","Set the content for this part.","Get the content disposition from option","Get the content length from op.","Get the content type from option","Invoke the <code>copy</code> operation on the specified <code>from</code> path and <code>to</code>…","Invoke the <code>copy</code> operation on the specified <code>from</code> path and <code>to</code>…","","","Invoke the <code>create</code> operation on the specified path","Invoke the <code>create</code> operation on the specified path","","","","","","","","","","","","","","","","","","","","","","","Invoke the <code>delete</code> operation on the specified path.","Invoke the <code>delete</code> operation on the specified path.","","","Get the current delimiter.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get expire from op.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","format will generates the bytes.","","","format authorization header by basic auth.","format authorization header by bearer token.","format content md5 header by given input.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calculate bytes content range from size and specified …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build a mixed part from a request.","","","Get service’s full capabilities.","Get service’s full capabilities.","Get basename from path.","","Get parent from path.","","Return request’s header.","Insert a header into part.","Insert a header into part.","Get If-Match from option","Get If-Match from option","Get If-None-Match from option","Get If-None-Match from option","Invoke the <code>info</code> operation to get metadata of accessor.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consume reply to get the meta.","Consume RpStat to get the inner metadata.","Consume OpBatch into BatchOperation","Into parts.","Consume reply to build a presigned request.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume a mixed part to build a response.","Consume RpBatch to get the batched results.","Convert self into static str.","Check if this range is full of this content.","Intercept the operations on the underlying storage.","Get the length that specified by this BytesContentRange, …","Get the limit of list operation.","","Invoke the <code>list</code> operation on the specified path.","Invoke the <code>list</code> operation on the specified path.","Operate on inner metadata.","","","Get a ref of metadata.","Get the current metakey.","Return request’s method.","Set the method for request in this part.","Name of backend, could be empty if underlying backend doesn…","Get backend’s native capabilities.","Create a new RpBatch.","Construct a new incoming async body","Create a new reply for <code>presign</code>.","Create a new PresignedRequest","Create a new reply for <code>read</code>.","Create a new reply for <code>stat</code>.","Create a new reply for <code>write</code>.","Create a new reply for <code>copy</code>.","Create a new reply for <code>rename</code>.","Create a new <code>OpCreateDir</code>.","Create a new <code>OpDelete</code>.","Create a new <code>OpList</code>.","Create a new <code>OpPresign</code>.","Create a new batch options.","Create a default <code>OpRead</code> which will read whole content of …","Create a new <code>OpStat</code>.","Create a new <code>OpWrite</code>.","Create a new <code>OpCopy</code>.","Create a new <code>OpMove</code>.","Create a new http client in async context.","Create a new <code>BytesRange</code>","Create a new multipart with random boundary.","Create a new part builder","Create a new mixed part with given uri.","Parse json deserialize error into opendal::Error.","Parse json serialize error into opendal::Error.","Create a new error happened during building request.","Create a new error happened during signing request.","Create a new error happened during signing request.","Parse xml deserialize error into opendal::Error.","Make sure all operation are constructed by normalized path:","Make sure root is normalized to style like <code>/abc/def/</code>.","Get offset of BytesRange.","<code>oio</code> provides OpenDAL’s raw traits and types that opendal …","Get operation from op.","Get operation from op.","Return the operation of this batch.","Returns the cache-control header that should be send back …","Returns the content-disposition header that should be send …","Returns the content-type header that should be send back …","parse will parse the bytes into a part.","Parse a response with multipart body into Multipart.","","TODO","Parse Content-Disposition for header map","Parse content length from header map.","Parse content md5 from header map.","Parse content range from header map.","Parse content type from header map.","parse datetime from given timestamp_millis","Parse dateimt from rfc2822.","Parse dateimt from rfc3339.","Parse etag from header map.","parse_into_metadata will parse standards http headers into …","Parse last modified from header map.","Parse redirect location from header map","Insert a part into multipart.","Insert a part header into part.","percent_encode_path will do percent encoding for http …","","","","Invoke the <code>presign</code> operation on the specified path.","Invoke the <code>presign</code> operation on the specified path.","","","Get range from OpRead.","Get the range inclusive of this BytesContentRange, return …","Get the range inclusive of this BytesContentRange, return …","","Invoke the <code>read</code> operation on the specified path, returns a …","Invoke the <code>read</code> operation on the specified path, returns a …","Invoke the <code>rename</code> operation on the specified <code>from</code> path and …","Invoke the <code>rename</code> operation on the specified <code>from</code> path and …","","","Get the results from RpBatch.","Root of backend, will be in format like <code>/path/to/dir/</code>","<code>Scheme</code> of backend.","Send a request in async way.","","Set full capabilities for service.","Set name of this backend.","Set root for backend.","Set <code>Scheme</code> for backend.","Get size of BytesRange.","Get the size of this BytesContentRange, return <code>None</code> if …","Get the start_after of list operation.","Invoke the <code>stat</code> operation on the specified path.","Invoke the <code>stat</code> operation on the specified path.","","","Calculate bytes range from bytes content range.","Convert bytes range into Range header.","Convert bytes content range into Content-Range header.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert bytes range into rust range.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return request’s uri.","Validate given path is match with given EntryMode.","Get the version of this delete operation.","Get version from option","Get version from option","Set the version for request in this part.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the append mode of op.","Set the boundary with given string.","Set the content type of option","Set the content disposition of option","Set the content length of op.","Set the content type of option","Change the delimiter. The default delimiter is “/”","Add response context to error.","Set the If-Match of the option","Set the If-Match of the option","Set the If-None-Match of the option","Set the If-None-Match of the option","Change the limit of this list operation.","Create reply read with existing metadata.","Change the metakey of this list operation.","Sets the cache-control header that should be send back by …","Sets the content-disposition header that should be send …","Sets the content-type header that should be send back by …","Create a new OpRead with range.","Update BytesContentRange with range.","Update BytesContentRange with size.","Change the start_after of this list operation.","Change the version of this delete operation.","Set the version of the option","Set the version of the option","","Invoke the <code>write</code> operation on the specified path, returns a","Invoke the <code>write</code> operation on the specified path, returns a","Providing Key Value Adapter for OpenDAL.","Providing Typed Key Value Adapter for OpenDAL.","KvAdapter is the adapter to underlying kv services.","Backend of kv service. If the storage service is one …","Metadata for this key value accessor.","Append a key into service","Append a key into service","Append a key into service in blocking way.","Append a key into service in blocking way.","","","Delete a key from service in blocking way.","Delete a key from service in blocking way.","","The blocking version of get.","The blocking version of get.","","","","Scan a key prefix to get all keys that start with this key …","Scan a key prefix to get all keys that start with this key …","The blocking version of set.","The blocking version of set.","","","","","","","Get the capabilities.","","","","","","","","","","","Delete a key from service.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a key from service.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Return the metadata of this key value accessor.","Get the name.","Create a new KeyValueAccessorInfo.","Create a new kv backend.","","","Scan a key prefix to get all keys that start with this key.","Scan a key prefix to get all keys that start with this key.","Get the scheme.","Set a key into service.","","","","","","","","","","","Configure root within this backend.","","Adapter is the typed adapter to underlying kv services.","The typed kv backend which implements Accessor for for …","Capability is used to describe what operations are …","Info for this key value accessor.","Value is the typed value stored in adapter.","","","Delete a value from adapter.","","Get a value from adapter.","","","","Scan a key prefix to get all keys that start with this key …","Scan a key prefix to get all keys that start with this key …","Set a value into adapter.","","","","","","","","","","","Get the capabilities.","","","","","","","","","","","","","","","","","","","","","","Delete a value from adapter.","","If typed_kv operator supports delete natively, it will be …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get a value from adapter.","If typed_kv operator supports get natively, it will be …","Get the scheme and name of current adapter.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Metadata of this value.","Get the name.","Create a new KeyValueAccessorInfo.","Create a new kv backend.","Create a new dir of value.","","","Scan a key prefix to get all keys that start with this key.","Scan a key prefix to get all keys that start with this key.","If typed_kv operator supports scan natively, it will be …","Get the scheme.","Set a value into adapter.","If typed_kv operator supports set natively, it will be …","Size returns the in-memory size of Value.","","","","","","","","","","","","","","","","","The correbonding content of this value.","","","","","Configure root within this backend.","","Operation for <code>Write::abort</code>","AppendObjectWrite is used to implement [<code>Write</code>] based on …","AppendObjectWriter will implements [<code>Write</code>] based on append …","Operation for <code>BlockingWrite::close</code>","Operation for <code>BlockingRead::next</code>","Operation for <code>BlockingPage::next</code>","BlockingPage is the blocking version of <code>Page</code>.","BlockingPager is a boxed <code>BlockingPage</code>","Read is the trait that OpenDAL returns to callers.","Operation for <code>BlockingRead::read</code>","BlockingReader is a boxed dyn <code>BlockingRead</code>.","Operation for <code>BlockingRead::seek</code>","BlockingWrite is the trait that OpenDAL returns to callers.","Operation for <code>BlockingWrite::write</code>","BlockingWriter is a type erased <code>BlockingWrite</code>","ByRangeReader that can do seek on non-seekable reader.","Operation for <code>Write::close</code>","Cursor is the cursor for <code>Bytes</code> that implements <code>oio::Read</code>","Entry is returned by <code>Page</code> or <code>BlockingPage</code> during list …","ToFlatPager will walk dir in bottom up way:","FdReader is a wrapper of input fd to implement <code>oio::Read</code>.","ToHierarchyPager will convert a flat page to hierarchy by …","The left side for the <code>TwoWaysWriter</code>.","The result of <code>MultipartUploadWrite::write_part</code>.","MultipartUploadWrite is used to implement [<code>Write</code>] based on …","MultipartUploadWriter will implements [<code>Write</code>] based on …","Operation for <code>Read::poll_next</code>","Operation for <code>Page::next</code>","Page trait is used by <code>raw::Accessor</code> to implement <code>list</code> or …","PageOperation is the name for APIs of pager.","The boxed version of <code>Page</code>","Read is the trait that OpenDAL returns to callers.","Operation for <code>Read::poll_read</code>","Extension of <code>Read</code> to make it easier for use.","PageOperation is the name for APIs of pager.","Reader is a type erased <code>Read</code>.","The right side for the <code>TwoWaysWriter</code>.","Operation for <code>Read::poll_seek</code>","Operation for <code>Write::sink</code>","Stream is the trait that OpenDAL accepts for sinking data.","Make given read streamable.","Streamer is a type erased <code>Stream</code>.","TwoWaysWrite is used to implement [<code>Write</code>] based on two …","VectorCursor is the cursor for <code>Vec&lt;Bytes&gt;</code> that implements …","Write is the trait that OpenDAL returns to callers.","Operation for <code>Write::write</code>","WriteOperation is the name for APIs of Writer.","Writer is a type erased <code>Write</code>","Abort the pending writer.","","","","abort_part will cancel the multipart upload and purge all …","Append the data to the end of this object.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clear the entire vector.","","","","","","","","","Close the writer and make sure all data has been flushed.","Close the writer and make sure all data has been flushed.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","complete_part will complete the multipart upload to build …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The etag of the part.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","initiate_part will call start a multipart upload and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","to_flat_pager is used to make a hierarchy pager flat.","to_hierarchy_pager is used to make a hierarchy pager flat.","Convert given file into <code>oio::Reader</code>.","","","","","","","","","","","","","","","","Convert given reader into <code>oio::Reader</code> by range.","Convert self into static str.","Convert self into static str.","Convert self into static str.","Convert given futures stream into <code>oio::Stream</code>.","Convert given futures reader into <code>oio::Stream</code>.","into_streamable is used to make <code>oio::Read</code> or …","Returns <code>true</code> if the remaining slice is empty.","Returns <code>true</code> if current vector is empty.","Return current bytes size of current vector.","Get entry’s mode.","Create a new reader from a file, starting at the given …","Create a new MultipartUploadWriter.","Create a new AppendObjectWriter.","Create a new vector cursor.","Create a new entry by its corresponding underlying storage.","Iterating <code>Bytes</code> from underlying reader.","Fetch a new page of <code>Entry</code>","Fetch a new page of <code>Entry</code>","Build a future for <code>poll_next</code>","Build a future for <code>poll_next</code>","","","","","","","","","","","","Get the current offset of the append object.","The number of the part, starting from 0.","Get the path of entry.","peak all will read and copy all bytes from current cursor …","peak_at_least will read and copy at least n bytes from …","Peak will read and copy exactly n bytes from current cursor","Stream <code>Bytes</code> from underlying reader.","Poll next item <code>Result&lt;Bytes&gt;</code> from the stream.","","","","","","","Read bytes asynchronously.","","","","","","Seek asynchronously.","","","","TODO: maybe we don’t need to do seek really, just call …","","Pop a bytes from vector cursor.","Push a new bytes into vector cursor.","Read synchronously.","Build a future for <code>poll_read</code>.","Build a future for <code>poll_read</code>.","","","","","","Returns the remaining slice.","Seek synchronously.","Build a future for <code>poll_seek</code>.","Build a future for <code>poll_seek</code>.","","","","TODO: maybe we don’t need to do seek really, just call …","","Set mode for entry.","Set path for entry.","Sink given stream into writer.","","","","Take will consume n bytes from current cursor.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new entry with given value.","Configure the write_min_size.","Configure the write_min_size.","Write whole content at once.","Write given bytes into writer.","","","","write_once write all data at once.","write_part will write a part of the data and returns the …","Azure Storage Blob services support.","Azure Data Lake Storage Gen2 Support. As known as <code>abfs</code>, …","cacache service support.","Tencent-Cloud COS services support.","dashmap backend support.","Dropbox backend support.","Etcd services support.","Foundationdb service support.","POSIX file system support.","FTP and FTPS services support.","Google Cloud Storage service.","GoogleDrive backend support.","GitHub Action Cache Services support.","Hadoop Distributed File System (HDFS™) support. A …","HTTP Read-only service support like Nginx and Caddy.","IPFS file system support based on IPFS HTTP Gateway.","IPFS file system support based on IPFS MFS API.","Memcached service support.","In memory service support. (BTreeMap Based)","mini-moka backend support.","moka backend support.","Huawei-Cloud Object Storage Service (OBS) support","OneDrive backend support.","Aliyun Object Storage Service (OSS) support","persy service support.","Postgresql services support.","Redb service support.","Redis services support.","RocksDB service support.","Aws S3 and compatible services (including minio, …","SFTP services support. (only works on unix)","Sled service support.","Supabase service","TiKV backend builder","Vercel Cache backend support.","Wasabi (an aws S3 compatible service) support","WebDAV backend support.","WebHDFS’s REST API support. There two implementations of …","Set access_key_id of this backend.","Set access_key_id of this backend.","Set access_key_id of this backend.","Set access_key_id of this backend.","Set access_key_secret of this backend.","set the bearer access token for OneDrive","default: no access token, which leads to failure","Access token is used for temporary access to the Dropbox …","set the bearer access token for Vercel","Set account_key of this backend.","Set account_key of this backend.","Set account_name of this backend.","Set account_name of this backend.","Allow anonymous will allow opendal to send request without …","Set temp dir for atomic write.","Set maximum batch operations of this backend.","Set maximum batch operations of this backend.","Set maximum batch operations of this backend.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set bucket of this backend. The param is required.","set the container’s name","Set bucket of this backend. The param is required.","Set bucket name of this backend.","Set bucket name of this backend.","Set bucket name of this backend.","Set bucket name of this backend.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","build the backend","","","","","","","","","Set the certificate authority file path.","Set the certificate authority file path.","Set the certificate file path.","Set the certificate file path.","Set the client id for Dropbox.","Set the client secret for Dropbox.","","","","","","","","","","","","","","","","","","","","","","","set the network address of redis cluster service. This …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the config path for Foundationdb. If not set, will …","Set the connection_string of the postgresql service.","Set container name of this backend.","set the base64 hashed credentials string used for OAuth2","set the credentials path of GCS.","Adding a customed credential load for service.","Adding a customed credential load for service.","Specify the customed token loader used by this service.","Set the path to the cacache data directory. Will create if …","Set the path to the rocksdb data directory. Will create if …","Set the path to the sled data directory. Will create if …","Set the path to the redb data directory. Will create if …","Set the path to the persy data directory. Will create if …","set the db used in redis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the default storage class for GCS.","Set default storage_class for this backend.","Set default storage_class for this backend. Unlike S3, …","Set the default ttl for memcached services.","Set the default ttl for redis services.","Set the delegation token of this backend, used for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Detect region of S3 bucket.","Disable config load so that opendal will not load config …","Disable config load so that opendal will not load config …","Disable config load so that opendal will not load config …","Disable load credential from ec2 metadata.","Disable load credential from ec2 metadata.","Disable batch listing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","set enable_copy for sftp backend. It requires the server …","Enable create simulation for ghac service.","OpenDAL requires all input path are normalized to make …","Enable virtual host style so that opendal will send API …","Enable virtual host style so that opendal will send API …","Set encryption_algorithm of this backend.","Set encryption_key of this backend.","Set encryption_key_sha256 of this backend.","Set endpoint of this backend.","Set endpoint of this backend.","Set endpoint of this backend.","set endpoint for ftp backend.","set the endpoint GCS service uses","Set endpoint for http backend.","Set endpoint if ipfs backend.","Set endpoint for ipfs.","set the network address of memcached service.","Set endpoint of this backend.","Set endpoint of this backend.","set the network address of redis service.","Set endpoint of this backend.","set endpoint for sftp backend.","Set endpoint of this backend.","Set endpoint of this backend.","Set endpoint for http backend.","Set the remote address of this backend default to …","set the network address of etcd service.","Set the network address of the TiKV service.","Set external_id for this backend.","Set external_id for this backend.","Set filesystem name of this backend.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","from_connection_string will make a builder from connection …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specify the http client that used by this service.","Specify the http client that used by this service.","Specify the http client that used by this service.","Specify the http client that used by this service.","Specify the http client that used by this service.","Specify the http client that used by this service.","Specify the http client that used by this service.","Specify the http client that used by this service.","Specify the http client that used by this service.","Specify the http client that used by this service.","Specify the http client that used by this service.","Specify the http client that used by this service.","Specify the http client that used by this service.","Specify the http client that used by this service.","Specify the http client that used by this service.","Specify the http client that used by this service.","Specify the http client that used by this service.","Specify the http client that used by this service.","Set the name of the persy index. Will create if not exists.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the insecure connection to TiKV.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set kerberos_ticket_cache_path of this backend","set key path for sftp backend.","Set the authorization key for this backend Do not set this …","Set the key field name of the postgresql service to …","Set the key file path.","Set the key file path.","set known_hosts strategy for sftp backend. available …","Sets the max capacity of the cache.","Sets the max capacity of the cache.","Name for this cache instance.","Set name_node of this backend.","set the password for etcd","set password for ftp backend.","set password for http backend","set the password for redis","set the password for Webdav","Set the predefined acl for GCS.","Set a endpoint for generating presigned urls.","Refresh token is used for long term access to the Dropbox …","Region represent the signing region of this endpoint. This …","Region represent the signing region of this endpoint.","Set role_arn for this backend.","Set role_arn for this backend.","Set root of this backend.","Set root of this backend.","Set root of this backend.","Set the root for dashmap.","set the working directory, all operations will be …","Set root for backend.","set root path for ftp backend.","set the working directory root of backend","set the working directory root of backend","Set root of this backend.","Set root path of http backend.","Set root of ipfs backend.","Set root for ipfs.","set the working directory, all operations will be …","Set the root for BTreeMap.","Set root of this backend.","Set root of this backend.","set the working directory, all operations will be …","set the working directory, all operations will be …","Set root of this backend.","set root path for sftp backend. It uses the default …","Set the root for sled.","Set root of this backend.","Set root of this backend.","Set root path of http backend.","Set the working directory of this backend","Set root path of OneDrive folder.","Set root path of GoogleDrive folder.","Set the root directory for dropbox.","Set the root for Redb.","Set the root for Foundationdb.","set the working directory, all operations will be …","Set sas_token of this backend.","set the GCS service scope","Set secret_access_key of this backend.","Set secret_access_key of this backend.","Set secret_access_key of this backend.","Set secret_id of this backend.","Set secret_key of this backend.","Set temporary credential used in AWS S3 connections","Set temporary credential used in service connections","Set the name of the persy segment. Will create if not …","Sets the segments number of the cache.","Set server_side_encryption for this backend.","Set server_side_encryption for this backend.","Set server_side_encryption for this backend.","Set server_side_encryption_aws_kms_key_id for this backend","Set server_side_encryption_aws_kms_key_id for this backend","Set server_side_encryption_customer_algorithm for this …","Set server_side_encryption_customer_algorithm for this …","Set server_side_encryption_customer_key for this backend.","Set server_side_encryption_customer_key for this backend.","Set server_side_encryption_customer_key_md5 for this …","Set server_side_encryption_customer_key_md5 for this …","Set server_side_encryption_key_id for this backend.","Enable server side encryption with aws managed kms key","Enable server side encryption with aws managed kms key","Enable server side encryption with customer key.","Enable server side encryption with customer key.","Enable server side encryption with customer key.","Enable server side encryption with customer managed kms key","Enable server side encryption with customer managed kms key","Enable server side encryption with s3 managed key","Enable server side encryption with s3 managed key","Set the GCS service account.","Set the table name for Redb.","Set the table name of the postgresql service to read/write.","Decides whether to enable thread pool of the cache.","Sets the time to idle of the cache.","Sets the time to idle of the cache.","Sets the time to live of the cache.","Sets the time to live of the cache.","","","","","","","","","","","","set bearer token for http backend","set the bearer token for Webdav","Set the tree for sled.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","set user for ftp backend.","Set user of this backend","set user for sftp backend.","set the username for etcd","set password for http backend","set the username for redis","set the password for Webdav","Set the value field name of the postgresql service to …","set the version that used by cache.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The buffer size should be a multiple of 256 KiB (256 x …","set the minimum size of unsized write, it should be …","set the minimum size of unsized write, it should be …","set the minimum size of unsized write, it should be …","set the minimum size of unsized write, it should be …"],"i":[64,14,15,15,0,0,0,0,0,15,3,0,3,14,14,3,14,3,3,3,14,3,15,15,11,15,15,0,0,0,0,3,15,11,15,15,15,15,15,15,15,15,14,15,15,14,14,3,0,15,15,0,0,15,3,15,14,14,15,15,0,0,0,15,14,15,15,14,0,15,15,0,15,15,64,0,15,15,15,15,14,11,14,15,3,15,15,15,0,1,16,16,16,3,3,3,6,16,70,65,1,17,59,60,30,32,11,12,8,3,6,7,13,14,15,16,70,65,1,17,59,60,30,32,11,12,8,3,6,7,13,14,15,16,64,8,6,11,12,8,3,6,7,13,14,15,16,11,12,8,3,6,7,13,14,15,16,1,17,70,65,1,17,59,60,30,32,11,12,8,3,6,7,13,14,15,16,70,65,1,17,59,60,30,32,11,12,8,3,6,7,13,14,15,16,70,65,1,17,59,60,30,32,11,12,8,3,6,7,13,14,15,16,8,8,8,8,8,1,6,7,16,6,7,16,11,13,15,16,6,7,16,6,7,70,65,1,17,59,60,30,32,11,12,8,3,6,7,13,14,15,16,70,65,1,17,59,60,30,32,11,12,8,3,6,7,13,14,15,16,0,70,65,1,17,59,60,30,32,11,12,8,3,6,7,13,14,15,16,11,8,3,14,15,11,11,11,8,8,8,3,3,3,14,14,14,15,15,15,8,30,17,32,32,11,11,12,8,3,6,7,13,14,14,15,15,16,70,65,1,17,59,60,30,32,32,32,32,32,32,32,32,32,11,12,8,8,3,6,7,13,14,15,16,64,6,11,12,8,3,6,7,13,14,15,16,15,13,15,15,6,7,70,65,1,17,59,60,30,32,11,12,8,3,6,7,13,14,15,16,70,65,1,17,59,60,30,32,11,12,8,3,6,7,13,14,15,16,65,60,12,70,65,1,17,59,60,30,32,11,12,8,3,6,7,13,14,15,16,14,15,70,59,11,8,6,7,11,8,32,32,8,30,6,0,6,7,6,7,16,6,7,16,16,16,16,6,7,6,7,32,12,8,12,13,13,30,32,8,6,65,65,60,3,0,0,12,1,70,1,1,70,70,59,70,70,70,70,70,1,1,1,16,6,16,6,6,16,6,16,6,32,6,7,6,7,70,59,70,59,0,65,65,6,7,16,16,16,6,16,16,16,16,16,16,6,7,6,3,6,7,6,7,6,7,6,7,16,13,13,65,65,0,8,8,8,8,8,8,8,8,8,32,32,32,32,8,1,32,70,6,7,16,6,16,16,3,11,12,8,3,6,7,13,14,15,16,32,11,14,15,70,65,1,17,59,60,30,32,11,12,8,3,6,7,13,14,15,16,70,65,1,17,59,60,30,32,11,12,8,3,6,7,13,14,15,16,70,59,70,65,1,17,59,60,30,32,11,12,8,3,6,7,13,14,15,16,8,6,70,65,1,17,59,60,30,32,11,12,8,3,6,7,13,14,15,16,8,8,8,8,8,8,32,8,8,6,7,8,32,8,1,17,17,17,6,7,16,16,16,6,7,16,16,16,16,6,7,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,101,117,118,119,102,103,104,105,106,107,108,109,110,111,112,113,114,101,117,118,119,102,103,104,105,106,107,108,109,110,111,112,113,114,101,102,103,104,105,106,107,108,109,110,111,112,113,114,101,102,103,104,105,106,107,108,109,110,111,112,113,114,101,117,118,119,102,103,104,105,106,107,108,109,110,111,112,113,114,101,117,118,119,102,103,104,105,106,107,108,109,110,111,112,113,114,101,117,118,119,102,103,104,105,106,107,108,109,110,111,112,113,114,106,101,103,104,105,109,111,113,114,101,117,118,119,102,103,104,105,106,107,108,109,110,111,112,113,114,101,117,118,119,102,103,104,105,106,107,108,109,110,111,112,113,114,101,117,118,119,102,103,104,105,106,107,108,109,110,111,112,113,114,103,103,104,106,107,108,109,110,101,117,118,119,102,103,104,105,106,107,108,109,110,111,112,113,114,101,102,103,104,105,106,107,108,109,110,111,112,113,114,101,117,118,119,102,103,104,105,106,107,108,109,110,111,112,113,114,103,116,101,117,118,119,102,103,104,105,106,107,108,109,110,111,112,113,114,101,117,118,119,102,103,104,105,106,107,108,109,110,111,112,113,114,101,117,118,119,102,103,104,105,106,107,108,109,110,112,113,114,101,102,105,107,110,112,113,111,101,102,103,104,105,106,107,108,109,110,111,112,113,114,101,117,118,119,102,103,104,105,106,107,108,109,110,111,112,113,114,101,117,118,119,102,103,104,105,106,107,108,109,110,111,112,113,114,101,117,118,119,102,103,104,105,106,107,108,109,110,111,112,113,114,101,117,118,119,102,103,104,105,106,107,108,109,110,111,112,113,114,104,104,101,104,101,101,101,101,101,109,105,105,0,0,0,0,99,26,58,62,99,26,58,62,99,26,58,62,99,26,58,62,99,26,58,62,99,26,58,62,99,99,58,62,99,26,58,62,99,26,58,62,99,26,58,62,99,26,58,62,99,26,58,62,99,26,58,62,99,26,58,62,58,62,58,62,58,62,99,26,58,62,99,26,58,62,99,26,58,62,26,99,26,58,62,0,0,0,0,0,0,0,0,0,0,98,100,95,77,78,89,90,98,100,25,57,61,95,77,78,89,90,98,100,25,57,61,78,98,100,95,77,78,89,90,98,100,25,57,61,95,77,78,89,90,98,100,25,57,61,95,77,78,89,90,98,100,25,57,61,78,98,100,78,98,100,78,98,100,57,61,95,77,78,89,90,98,100,25,57,61,95,77,78,89,90,98,100,25,57,61,95,77,78,89,90,98,100,25,57,61,95,77,78,89,90,98,100,25,57,61,95,77,89,90,95,77,89,90,95,77,78,89,90,98,100,25,57,61,95,77,78,89,90,98,100,25,57,61,95,77,78,89,90,98,100,25,57,61,95,77,78,89,90,98,100,25,57,61,61,57,61,77,89,90,77,89,90,77,89,90,95,77,78,89,90,98,100,25,57,61,77,89,90,57,61,95,77,78,89,90,98,100,25,57,61,95,77,78,89,90,98,100,25,57,61,95,77,78,89,90,98,100,25,57,61,95,77,78,89,90,98,100,25,57,61,95,89,25,95,77,78,89,90,98,100,25,57,61,0,0,0,153,0,0,153,153,153,153,29,261,153,29,261,153,153,153,29,261,130,0,0,153,153,165,153,160,130,0,0,0,0,153,261,0,0,54,153,0,0,0,0,0,0,0,0,0,0,0,0,0,29,261,0,153,0,0,153,159,29,261,153,0,0,0,0,0,0,0,0,0,0,153,159,130,127,0,153,159,29,261,0,126,128,125,29,29,261,261,29,29,261,261,29,29,261,261,29,29,261,261,261,29,29,261,29,29,29,29,261,261,29,29,261,261,261,29,29,170,165,150,152,153,138,140,154,155,76,156,146,157,136,144,137,139,141,158,159,132,160,142,145,126,135,143,148,130,125,20,128,161,162,170,165,150,152,153,138,140,154,155,76,156,146,157,136,144,137,139,141,158,159,132,160,142,145,126,135,143,148,130,125,20,128,161,162,148,0,0,0,0,150,126,148,152,153,138,140,154,155,76,156,146,157,136,144,137,139,141,158,159,132,160,142,145,126,135,143,148,125,20,152,153,138,140,154,155,76,156,146,157,136,144,137,139,141,158,159,132,160,142,145,126,135,143,148,125,20,170,165,150,152,153,138,140,154,155,76,156,146,157,136,144,137,139,141,158,159,132,160,142,145,126,135,143,148,130,125,20,128,161,162,170,165,150,152,153,138,140,154,155,76,156,146,157,136,144,137,139,141,158,159,132,160,142,145,126,135,143,148,130,125,20,128,161,162,170,165,150,152,153,138,140,154,155,76,156,146,157,136,144,137,139,141,158,159,132,160,142,145,126,135,143,148,130,125,20,128,161,162,150,161,162,126,126,126,29,29,261,261,29,29,261,261,152,153,138,140,154,157,136,144,137,139,141,142,145,126,135,143,130,125,20,128,29,29,261,261,141,170,165,150,152,153,138,140,154,155,76,156,146,157,136,144,137,139,141,158,159,132,160,142,145,126,135,143,148,130,125,20,128,161,162,170,165,150,152,153,138,140,154,155,76,156,146,157,136,144,137,139,141,158,159,132,160,142,145,126,135,143,148,130,125,20,128,161,162,20,170,165,150,152,153,138,140,154,155,76,156,146,157,136,144,137,139,141,158,159,132,160,142,145,126,135,143,148,130,125,20,128,161,162,153,125,20,153,153,153,125,125,125,20,20,20,158,152,153,153,138,140,154,155,76,156,146,157,136,144,137,139,141,158,159,132,160,142,145,126,135,143,148,125,125,20,20,128,161,162,127,161,162,0,0,0,170,165,165,150,152,152,153,138,140,154,155,76,156,146,157,136,144,137,139,141,158,159,159,159,159,132,160,160,142,145,126,135,143,148,130,125,125,20,128,161,162,20,152,153,138,140,154,155,76,156,146,157,136,144,137,139,141,158,159,132,160,142,145,126,135,143,148,125,20,162,125,20,152,152,0,153,0,153,76,161,162,142,145,142,145,29,170,165,150,152,153,138,140,154,155,76,156,146,157,136,144,137,139,141,158,159,132,160,142,145,126,135,143,148,130,125,20,128,161,162,261,170,165,150,152,153,138,140,154,155,76,156,146,157,136,144,137,139,141,158,159,132,160,142,145,126,135,143,148,130,125,20,128,161,162,156,146,132,128,155,170,165,150,152,153,138,140,154,155,76,156,146,157,136,144,137,139,141,158,159,132,160,142,145,126,135,143,148,130,125,20,128,161,162,162,170,153,125,54,20,141,261,29,29,146,261,261,156,141,76,162,152,152,170,150,155,76,156,146,157,136,144,137,139,141,158,132,142,145,126,135,143,148,125,128,161,162,0,0,0,0,0,0,0,0,125,0,158,132,160,142,142,142,127,128,161,162,0,0,0,0,0,0,0,0,0,0,0,0,128,162,0,150,150,150,29,29,261,261,142,20,20,261,29,29,29,29,261,261,170,152,152,148,20,152,152,152,152,125,20,141,29,29,261,261,20,125,20,152,153,138,140,154,155,76,156,146,157,136,144,137,139,141,158,159,132,160,142,145,126,135,143,148,125,20,125,153,125,20,170,165,150,152,153,138,140,154,155,76,156,146,157,136,144,137,139,141,158,159,132,160,142,145,126,135,143,148,130,125,20,128,161,162,170,165,150,152,153,138,140,154,155,76,156,146,157,136,144,137,139,141,158,159,132,160,142,145,126,135,143,148,130,125,20,128,161,162,170,165,150,152,153,138,140,154,155,76,156,146,157,136,144,137,139,141,158,159,132,160,142,145,126,135,143,148,130,125,20,128,161,162,76,0,139,142,145,162,170,165,150,152,153,138,140,154,155,76,156,146,157,136,144,137,139,141,158,159,132,160,142,145,126,135,143,148,130,125,20,128,161,162,126,128,126,126,126,126,141,0,142,145,142,145,141,156,141,142,142,142,142,20,20,141,139,142,145,261,29,29,0,0,0,0,0,183,183,183,183,184,184,183,183,184,183,183,184,184,184,183,183,183,183,184,184,166,184,166,184,166,184,184,166,184,166,184,166,184,184,184,183,184,166,184,166,184,166,184,184,166,184,184,183,184,166,184,166,184,166,184,184,183,166,166,184,184,184,183,183,166,183,184,184,166,184,166,184,166,184,166,184,184,184,0,0,0,0,0,187,187,186,187,186,187,187,187,186,186,186,187,187,189,188,190,187,189,188,190,187,189,188,190,187,188,190,187,189,188,190,187,189,188,190,187,189,188,190,187,187,187,190,186,187,190,189,188,190,187,189,188,190,187,189,188,190,187,188,190,187,189,188,190,187,188,190,187,186,190,186,187,189,188,190,187,189,188,190,187,189,188,190,187,187,188,189,189,187,188,187,187,186,186,190,189,186,190,188,187,188,190,187,189,188,190,187,189,188,190,187,189,188,190,187,188,189,188,190,187,187,187,199,0,0,199,198,200,0,0,0,198,0,198,0,199,0,0,199,0,0,0,0,0,192,0,0,0,198,200,0,0,0,0,198,0,0,0,192,198,199,0,0,0,0,0,0,199,0,0,191,192,194,196,193,195,209,208,206,192,202,194,196,204,205,203,197,198,199,200,201,209,208,206,192,202,194,196,204,205,203,197,198,199,200,201,197,198,199,200,201,198,199,200,201,262,191,192,194,196,209,208,206,192,202,194,196,204,205,203,197,198,199,200,201,209,208,206,192,202,194,196,204,205,203,197,198,199,200,201,209,208,206,192,202,194,196,204,205,203,197,198,199,200,201,193,197,209,208,206,192,202,194,196,204,205,203,197,198,199,200,201,209,208,206,192,202,194,196,204,205,203,197,198,199,200,201,209,208,206,192,202,194,196,204,205,203,197,198,199,200,201,198,199,200,201,198,198,198,199,199,199,200,200,200,201,201,201,202,198,198,199,199,200,200,201,209,208,206,192,202,194,196,204,205,203,203,203,197,198,199,200,201,198,199,200,201,198,199,200,198,199,200,209,208,206,192,202,194,196,204,205,203,197,198,199,200,201,193,209,208,206,192,202,194,196,204,205,203,197,198,199,200,201,0,0,0,209,208,206,192,202,194,196,204,205,203,197,198,199,200,201,0,198,199,200,0,0,0,203,197,197,201,206,194,196,197,201,211,216,217,263,263,211,209,208,206,214,215,204,204,205,205,203,195,202,201,197,197,197,218,220,218,209,208,206,220,203,218,218,209,208,206,203,218,218,209,208,206,203,197,197,211,263,263,211,209,208,206,203,203,211,263,263,211,209,208,206,203,201,201,191,192,194,196,197,198,199,200,201,198,199,200,209,208,206,192,202,194,196,204,205,203,197,198,199,200,201,209,208,206,192,202,194,196,204,205,203,197,198,199,200,201,209,208,206,192,202,194,196,204,205,203,197,198,199,200,201,209,208,206,192,202,194,196,204,205,203,197,198,199,200,201,201,194,196,262,191,192,194,196,193,193,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,221,222,223,224,222,225,226,227,228,229,230,229,230,223,231,229,222,223,229,230,232,235,236,231,237,233,238,239,240,241,242,243,244,245,246,221,222,247,248,249,250,223,251,252,234,224,253,254,225,226,227,228,255,256,257,258,229,230,232,235,236,231,237,233,238,239,240,241,242,243,244,245,246,221,222,247,248,249,250,223,251,252,234,224,253,254,225,226,227,228,255,256,257,258,232,233,221,222,223,234,224,229,230,232,235,236,231,237,233,238,239,240,241,242,243,244,245,246,221,222,247,248,249,250,223,251,252,234,224,253,254,225,226,227,228,255,256,257,258,236,256,236,256,227,227,229,230,232,236,241,243,221,249,250,254,256,229,230,232,236,241,243,221,249,250,254,256,249,229,230,232,235,236,231,237,233,238,239,240,241,242,243,244,245,246,221,222,247,248,249,250,223,251,252,234,224,253,254,225,226,227,228,255,256,257,258,229,230,232,235,236,231,237,233,238,239,240,241,242,243,244,245,246,221,222,247,248,249,250,223,251,252,234,224,253,254,225,226,227,228,255,256,257,258,229,230,232,235,236,231,237,233,238,239,240,241,242,243,244,245,246,221,222,247,248,249,250,223,251,252,234,224,253,254,225,226,227,228,255,256,257,258,257,258,229,233,233,223,224,233,247,250,252,255,248,249,229,230,232,235,236,231,237,233,238,239,240,241,242,243,244,245,246,221,222,247,248,249,250,223,251,252,234,224,253,254,225,226,227,228,255,256,257,258,233,223,224,243,249,254,229,230,232,235,236,231,237,233,238,239,240,241,242,243,244,245,246,221,222,247,248,249,250,223,251,252,234,224,253,254,225,226,227,228,255,256,257,258,229,230,232,235,236,231,237,233,238,239,240,241,242,243,244,245,246,221,222,247,248,249,250,223,251,252,234,224,253,254,225,226,227,228,255,256,257,258,223,232,223,224,223,224,254,229,230,232,235,236,231,237,233,238,239,240,241,242,243,244,245,246,221,222,247,248,249,250,223,251,252,234,224,253,254,225,226,227,228,255,256,257,258,251,238,231,223,224,229,229,229,229,230,232,237,233,240,241,242,243,221,222,249,223,251,234,224,253,254,236,256,223,224,230,229,230,232,236,231,237,233,238,239,240,241,242,245,246,221,222,249,250,223,251,234,224,253,254,225,226,227,258,229,230,232,235,236,231,237,233,238,239,240,241,242,243,244,245,246,221,222,247,248,249,250,223,251,252,234,224,253,254,225,226,227,228,255,256,257,258,229,229,230,232,235,236,231,237,233,238,239,240,241,242,243,244,245,246,221,222,247,248,249,250,223,251,252,234,224,253,254,225,226,227,228,255,256,257,258,229,230,232,236,241,243,221,249,250,254,256,229,230,232,233,238,240,241,242,221,222,223,234,224,253,225,226,227,228,248,229,230,232,235,236,231,237,233,238,239,240,241,242,243,244,245,246,221,222,247,248,249,250,223,251,252,234,224,253,254,225,226,227,228,255,256,257,258,256,229,230,232,235,236,231,237,233,238,239,240,241,242,243,244,245,246,221,222,247,248,249,250,223,251,252,234,224,253,254,225,226,227,228,255,256,257,258,229,230,232,235,236,231,237,233,238,239,240,241,242,243,244,245,246,221,222,247,248,249,250,223,251,252,234,224,253,254,225,226,227,228,255,256,257,258,239,251,234,258,236,256,251,245,246,246,239,236,237,240,249,253,233,222,227,223,224,223,224,229,230,232,235,236,231,237,233,238,239,240,241,242,243,244,221,222,249,250,223,251,252,234,224,253,254,225,226,227,255,257,258,229,233,221,223,224,232,232,223,224,248,246,222,223,224,223,224,223,224,223,224,223,224,222,223,224,229,223,224,223,224,223,224,233,255,258,246,245,246,245,246,229,230,232,236,241,243,221,249,250,254,256,240,253,252,229,230,232,235,236,231,237,233,238,239,240,241,242,243,244,245,246,221,222,247,248,249,250,223,251,252,234,224,253,254,225,226,227,228,255,256,257,258,229,230,232,235,236,231,237,233,238,239,240,241,242,243,244,245,246,221,222,247,248,249,250,223,251,252,234,224,253,254,225,226,227,228,255,256,257,258,229,230,232,235,236,231,237,233,238,239,240,241,242,243,244,245,246,221,222,247,248,249,250,223,251,252,234,224,253,254,225,226,227,228,255,256,257,258,237,239,251,236,240,249,253,258,238,229,230,232,235,236,231,237,233,238,239,240,241,242,243,244,245,246,221,222,247,248,249,250,223,251,252,234,224,253,254,225,226,227,228,255,256,257,258,233,232,221,222,223],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],0,0,0,[[3,[5,[[4,[3]]]]]],[[3,[5,[[4,[3]]]]]],[[3,[5,[[4,[3]]]]]],[6,7],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[8,[[10,[9]]]],[6,2],[11,11],[12,12],[8,8],[3,3],[6,6],[7,7],[13,13],[14,14],[15,15],[16,16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[17,2],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[8,[[10,[9]]]],[8,19],[8,[[10,[9]]]],[8,[[10,[20]]]],[8,[[10,[9]]]],[[1,19,[0,[21,22,23,24]]],2],[[6,9,9],2],[[7,9,9],2],0,[[6,9],2],[[7,9],2],0,[[],11],[[],13],[[],15],[[],16],[[6,9],2],[[7,9],2],0,[[6,9],25],[[7,9],26],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],0,[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[[11,11],28],[[8,8],28],[[3,3],28],[[14,14],28],[[15,15],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[8,[[10,[9]]]],[[[30,[29]]],6],[17,31],[[32,33],34],[[32,33],34],[[11,33],34],[[11,33],34],[[12,33],34],[[8,33],34],[[3,33],34],[[6,33],34],[[7,33],34],[[13,33],34],[[14,33],34],[[14,33],34],[[15,33],34],[[15,33],34],[[16,33],34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,32],[36,32],[37,32],[38,32],[[]],[39,32],[40,32],[41,32],[42,32],[[]],[[]],[[]],[43,8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[45,[44,44]]]],[[[45,[44,44]]],[[2,[[30,[29]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,[[46,[15]]]],[13,16],[[[0,[47,48]],49],19],[[15,50]],[6,13],[7,13],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[14,9],[15,9],[[],51],[[],51],[11,28],[8,28],[[6,9],[[2,[28]]]],[[7,9],[[2,[28]]]],[11,28],[8,28],[32,28],[32,14],[8,[[10,[[53,[52]]]]]],[[[30,[29]],[54,[29]]],30],[[6,[54,[55]]],6],0,[6,27],[7,27],[[6,9],[[2,[[56,[12]]]]]],[[7,9],[[2,[[56,[12]]]]]],0,[[6,9],57],[[7,9],58],0,0,0,0,[[6,9],[[2,[59]]]],[[7,9],[[2,[60]]]],[[6,9],61],[[7,9],62],[[32,63],32],[12,8],[8,11],[12,9],[13,9],[13,16],[29,[[30,[29]]]],[[14,9],32],[11,8],[64,[[2,[[30,[29]]]]]],[65,[[10,[[2,[66]]]]]],[65,10],[60,10],[3],0,0,[12,9],[[[67,[1]],68],[[69,[31]]]],[[[67,[70]],68],[[69,[[31,[19]]]]]],[[[67,[1]],68],[[69,[31]]]],[[[67,[1]],68],[[69,[31]]]],[[[67,[70]],68],[[69,[10]]]],[[70,68],[[69,[[10,[[2,[66]]]]]]]],[[[67,[59]],68],[[69,[10]]]],[[[67,[70]],68,71],[[69,[31]]]],[[[67,[70]],68,[73,[72]]],[[69,[[31,[27]]]]]],[[70,68,[73,[72]]],[[69,[[2,[27]]]]]],[[70,68,74],[[69,[[2,[19]]]]]],[[[67,[70]],68,74],[[69,[[31,[19]]]]]],[[[67,[1]],68],[[69,[31]]]],[[[67,[1]],68,[73,[72]]],[[69,[[31,[27]]]]]],[[[67,[1]],68,[73,[72]]],[[69,[[31,[27]]]]]],0,[[6,9,75],[[2,[76]]]],0,[[6,9,75],77],[[6,9,75],[[2,[76]]]],0,[[6,9,75],[[2,[76]]]],0,[[6,9,75],78],[79],[[6,9,[80,[19]]],[[2,[[56,[72]]]]]],[[7,9,[80,[19]]],[[2,[[56,[72]]]]]],[[6,9,[80,[19]]],[[2,[70]]]],[[7,9,[80,[19]]],[[2,[65]]]],[[[86,[81,82,[0,[83,84]],85]]],[[87,[82,[0,[83,84]],85]]]],[[[86,[81,82,[0,[83,84]],85]]],[[87,[82,[0,[83,84]],85]]]],[[[86,[81,82,[0,[83,84]],85]],88],[[87,[82,[0,[83,84]],85]]]],[[[86,[81,82,[0,[83,84]],85]],88],[[87,[82,[0,[83,84]],85]]]],0,[[65,[73,[72]]],[[31,[27]]]],[[65,[73,[72]]],[[2,[27]]]],[[6,9],[[2,[[56,[72]]]]]],[[7,9],[[2,[[56,[72]]]]]],0,0,0,[[6,9],89],0,0,0,0,0,0,[[6,9],[[2,[70]]]],[[7,9],[[2,[65]]]],[[6,9],90],[[3,[5,[[4,[3]]]]]],[[6,[56,[44]]],2],[[7,[56,[44]]],2],[[6,9],2],[[7,9],2],[[6,[0,[91,24]]],2],[[7,92],2],[[6,9,9],2],[[7,9,9],2],0,[13,9],[13,15],[[65,74],[[31,[19]]]],[[65,74],[[2,[19]]]],0,[[8,9],8],[[8,9],8],[[8,19],8],[[8,9],8],[[8,20],8],[[8,9],8],[[8,9],8],[[8,[53,[52]]],8],[[8,11],8],[32,32],[32,32],[[32,[5,[93]]],32],[32,32],[[8,9],8],[[1,19,[0,[91,22,23,24]]],2],[32,[[10,[94]]]],[[[67,[70]],74],31],[[6,9],[[2,[8]]]],[[7,9],[[2,[8]]]],0,[[6,9],95],0,0,[[3,[5,[[4,[3]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],44],[[],44],[[],44],[[],44],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[67,68],[[69,[[10,[46]]]]]],[[67,68],[[69,[[10,[46]]]]]],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[8,[[10,[9]]]],[[15,[45,[44,44]]],[[2,[6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[8,44],8],[[8,44],8],[[8,19],8],[[8,44],8],[[8,20],8],[[8,44],8],[[32,9,[5,[44]]],32],[[8,44],8],[[8,[53,[52]]],8],[[6,27],6],[[7,27],7],[[8,11],8],[[32,[5,[9]]],32],[[8,44],8],[[1,[5,[66]]],2],[[[73,[72]]],[[46,[97]]]],[[17,[73,[72]]],[[31,[27]]]],[[17,[5,[66]]],2],[[6,9,[5,[66]]],2],[[7,9,[5,[66]]],2],0,0,0,[[6,9,[5,[66]]],98],[[7,9,[5,[66]]],99],0,0,0,0,[[6,9],[[2,[1]]]],[[7,9],[[2,[17]]]],[[6,9],100],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[101,101],[102,102],[103,103],[104,104],[105,105],[106,106],[107,107],[108,108],[109,109],[110,110],[111,111],[112,112],[113,113],[114,114],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],[[2,[106]]]],[[],101],[[],103],[[],104],[[],105],[[],109],[[],111],[[],113],[[],114],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[[103,115]],[[103,33],34],[[104,33],34],[[106,33],34],[[107,33],34],[[108,33],34],[[109,33],34],[[110,33],34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[103,44]],[[32,75,73]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[[101,[116]],29]],[[117,29]],[[118,29]],[[119,29]],[[102,29]],[[103,29]],[[104,29]],[[105,29]],[[106,29]],[[107,29]],[[108,29]],[[109,29]],[[110,29]],[[112,29]],[[113,29]],[[114,29]],[[],101],[27,102],[[],105],[120,107],[9,110],[[121,121],112],[[],113],[122,31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[104,28],104],[[104,[10,[9]]],[[2,[104]]]],[[101,123],101],[[104,[10,[9]]],[[2,[104]]]],[101,101],[[101,75],101],[[101,27],101],[[101,75],101],[[101,116],[[101,[116]]]],[124,109],[[105,19],105],[[105,75],105],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[99,2],[26,2],[58,[[2,[[56,[12]]]]]],[62,[[2,[60]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[99,19],99],[[99,9],99],[[58,9],58],[[62,9],62],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[[]],[[]],[[]],[[]],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[],51],[[],51],[[],51],[[],51],[[58,27],58],[[62,27],62],[[58,[5,[[4,[3]]]]],58],[[62,[5,[[4,[3]]]]],62],[[58,9],58],[[62,9],62],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],96],[[],96],[[],96],[[],96],[[26,9],26],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[98,28],98],[[100,28],100],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[78,9],78],[[98,9],98],[[100,9],100],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[78,9],78],[[98,9],98],[[100,9],100],[[78,19],78],[[98,19],98],[[100,19],100],[[78,9],78],[[98,9],98],[[100,9],100],[[57,9],57],[[61,9],61],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[95,9],95],[[77,9],77],[[89,9],89],[[90,9],90],[[95,9],95],[[77,9],77],[[89,9],89],[[90,9],90],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[61,27],61],[[57,[5,[[4,[3]]]]],57],[[61,[5,[[4,[3]]]]],61],[[77,9],77],[[89,9],89],[[90,9],90],[[77,9],77],[[89,9],89],[[90,9],90],[[77,9],77],[[89,9],89],[[90,9],90],[[[67,[95]],68],69],[[[67,[77]],68],69],[[[67,[78]],68],69],[[[67,[89]],68],69],[[[67,[90]],68],69],[[[67,[98]],68],69],[[[67,[100]],68],69],[[[67,[25]],68],69],[[[67,[57]],68],69],[[[67,[61]],68],69],[[77,125],77],[[89,[80,[19]]],89],[[90,[80,[19]]],90],[[57,9],57],[[61,9],61],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[67,68],69],[[67,68],69],[[67,68],69],[[67,68],69],[[67,68],69],[[67,68],69],[[67,68],69],[[67,68],69],[[67,68],69],[[67,68],69],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[95,9],95],[[89,9],89],[[25,9],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[126,28],[[[128,[127]],129],[[2,[[131,[130]]]]]],[[125,66],66],[132,[[67,[[134,[133]]]]]],[132,[[67,[[134,[133]]]]]],[132,[[67,[[134,[133]]]]]],[132,[[67,[[134,[133]]]]]],[[9,9,135],[[2,[136]]]],[[9,9,135],[[2,[136]]]],[[9,9,135],[[2,[136]]]],[[9,9,135],[[2,[136]]]],[[9,137],[[2,[138]]]],[[9,137],[[2,[138]]]],[[9,137],[[2,[138]]]],[[9,137],[[2,[138]]]],[[9,139],[[2,[140]]]],[[9,139],[[2,[140]]]],[[9,139],[[2,[140]]]],[[9,139],[[2,[140]]]],[[9,141],2],[[9,141],2],[[9,141],2],[[9,142],2],[[9,142],2],[[9,142],2],[[9,9,143],[[2,[144]]]],[[9,9,143],[[2,[144]]]],[[9,9,143],[[2,[144]]]],[[9,9,143],[[2,[144]]]],[[9,145],[[2,[146]]]],[[9,145],[[2,[146]]]],[[9,145],[[2,[146]]]],[[9,145],[[2,[146]]]],[[9,126],2],[[9,126],2],[[9,126],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[147,[[2,[148]]]],[[9,9],44],[9,[[2,[149]]]],[[9,9],44],[[9,9],44],[150,[[2,[66]]]],[126,[[10,[9]]]],[148,151],[152,152],[153,153],[138,138],[140,140],[154,154],[155,155],[76,76],[156,156],[146,146],[157,157],[136,136],[144,144],[137,137],[139,139],[141,141],[158,158],[159,159],[132,132],[160,160],[142,142],[145,145],[126,126],[135,135],[143,143],[148,148],[125,125],[20,20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[150,2],[[161,[5,[66]]],161],[[162,[5,[66]]],162],[126,[[10,[9]]]],[126,[[10,[19]]]],[126,[[10,[9]]]],[[9,9,135],[[67,[[134,[133]]]]]],[[9,9,135],[[67,[[134,[133]]]]]],[[9,9,135],[[67,[[134,[133]]]]]],[[9,9,135],[[67,[[134,[133]]]]]],[[9,137],[[67,[[134,[133]]]]]],[[9,137],[[67,[[134,[133]]]]]],[[9,137],[[67,[[134,[133]]]]]],[[9,137],[[67,[[134,[133]]]]]],[[],152],[[],153],[[],138],[[],140],[[],154],[[],157],[[],136],[[],144],[[],137],[[],139],[[],141],[[],142],[[],145],[[],126],[[],135],[[],143],[[],130],[[],125],[[],20],[[],[[128,[127]]]],[[9,139],[[67,[[134,[133]]]]]],[[9,139],[[67,[[134,[133]]]]]],[[9,139],[[67,[[134,[133]]]]]],[[9,139],[[67,[[134,[133]]]]]],[141,9],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[163,[[46,[20]]]],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[[153,153],28],[[125,125],28],[[20,20],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[158,75],[[152,33],34],[[153,33],34],[[153,33],34],[[138,33],34],[[140,33],34],[[154,33],34],[[155,33],34],[[76,33],34],[[156,33],34],[[146,33],34],[[157,33],34],[[136,33],34],[[144,33],34],[[137,33],34],[[139,33],34],[[141,33],34],[[158,33],34],[[159,33],34],[[132,33],34],[[160,33],34],[[142,33],34],[[145,33],34],[[126,33],34],[[135,33],34],[[143,33],34],[[148,33],34],[[125,33],34],[[125,33],34],[[20,33],34],[[20,33],34],[[[128,[[0,[164,127]]]],33],34],[[161,33],34],[[162,33],34],[[],66],[161,66],[162,66],[[9,9],[[2,[44]]]],[9,[[2,[44]]]],[[[73,[72]]],44],[[]],[[]],[140,165],[[]],[[]],[166,152],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[142,159],[145,159],[[]],[126,159],[[]],[[]],[139,160],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[80,[19]]],125],[[]],[[]],[[]],[[]],[[]],[[19,125],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[131,[130]]],162],[9,[[2,[125]]]],[9,[[2,[20]]]],[152,16],[152,16],[9,9],[[[0,[47,48]],49],19],[9,9],[[153,50]],[76,167],[[161,168,149],161],[[162,168,149],162],[142,[[10,[9]]]],[145,[[10,[9]]]],[142,[[10,[9]]]],[145,[[10,[9]]]],[[],152],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[156,8],[146,8],[132,56],[[[128,[127]]],[[56,[127]]]],[155,76],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[162,[[169,[150]]]],[170,56],[153,9],[125,28],[[]],[20,[[10,[19]]]],[141,[[10,[27]]]],[[9,141],[[67,[[134,[133]]]]]],[[9,141],[[67,[[134,[133]]]]]],[[9,141],[[67,[[134,[133]]]]]],[[146,63],146],[[],152],[[],152],[156,8],[141,[[4,[3]]]],[76,171],[[162,171],162],[152,9],[152,16],[56,170],[[172,[10,[19]]],150],[76,155],[[171,173,167],76],[19,156],[8,146],[[],157],[[],136],[[],144],[[],137],[[],139],[[],141],[[[5,[159]],75],158],[56,132],[[],142],[[],145],[[],126],[[],135],[[],143],[[],[[2,[148]]]],[[[10,[19]],[10,[19]]],125],[[],[[128,[127]]]],[9,161],[9,162],[174,32],[174,32],[175,32],[93,32],[93,32],[176,32],[9,44],[9,44],[125,[[10,[19]]]],0,[158,159],[132,73],[160,153],[142,[[10,[9]]]],[142,[[10,[9]]]],[142,[[10,[9]]]],[9,2],[[[128,[127]],66],[[2,[[128,[127]]]]]],[9,[[2,[161]]]],[9,[[2,[162]]]],[167,[[2,[[10,[9]]]]]],[167,[[2,[[10,[19]]]]]],[167,[[2,[[10,[9]]]]]],[167,[[2,[[10,[20]]]]]],[167,[[2,[[10,[9]]]]]],[177,[[2,[[53,[52]]]]]],[9,[[2,[[53,[52]]]]]],[9,[[2,[[53,[52]]]]]],[167,[[2,[[10,[9]]]]]],[[9,167],[[2,[8]]]],[167,[[2,[[10,[[53,[52]]]]]]]],[167,[[2,[[10,[9]]]]]],[[[128,[127]],127],[[128,[127]]]],[[162,168,149],162],[9,44],[[150,68],[[69,[[10,[[2,[66]]]]]]]],[[150,68,[73,[72]]],[[69,[[2,[27]]]]]],[[150,68,74],[[69,[[2,[19]]]]]],[[9,158],[[67,[[134,[133]]]]]],[[9,158],[[67,[[134,[133]]]]]],[[9,158],[[67,[[134,[133]]]]]],[[9,158],[[67,[[134,[133]]]]]],[142,125],[20,[[10,[[178,[19]]]]]],[20,[[10,[[179,[19]]]]]],[[9,142],[[67,[[134,[133]]]]]],[[9,142],[[67,[[134,[133]]]]]],[[9,142],[[67,[[134,[133]]]]]],[[9,9,143],[[67,[[134,[133]]]]]],[[9,9,143],[[67,[[134,[133]]]]]],[[9,9,143],[[67,[[134,[133]]]]]],[[9,9,143],[[67,[[134,[133]]]]]],[170,73],[152,9],[152,15],[[148,[131,[130]]],[[2,[[169,[150]]]]]],[[20,180],46],[[152,16],152],[[152,9],152],[[152,9],152],[[152,15],152],[125,[[10,[19]]]],[20,[[10,[19]]]],[141,[[10,[9]]]],[[9,145],[[67,[[134,[133]]]]]],[[9,145],[[67,[[134,[133]]]]]],[[9,145],[[67,[[134,[133]]]]]],[[9,145],[[67,[[134,[133]]]]]],[20,[[10,[125]]]],[125,44],[20,44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[125,[[80,[19]]]],[[],44],[[],44],[[],44],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[76,173],[[9,11],28],[139,[[10,[9]]]],[142,[[10,[9]]]],[145,[[10,[9]]]],[[162,181],162],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[126,28],126],[[[128,[127]],9],[[128,[127]]]],[[126,9],126],[[126,9],126],[[126,19],126],[[126,9],126],[[141,9],141],[[32,182],32],[[142,9],142],[[145,9],145],[[142,9],142],[[145,9],145],[[141,27],141],[8,156],[[141,[5,[[4,[3]]]]],141],[[142,9],142],[[142,9],142],[[142,9],142],[[142,125],142],[[20,19,19],20],[[20,19],20],[[141,9],141],[[139,9],139],[[142,9],142],[[145,9],145],[[9,126],[[67,[[134,[133]]]]]],[[9,126],[[67,[[134,[133]]]]]],[[9,126],[[67,[[134,[133]]]]]],0,0,0,0,0,[[9,[73,[72]]],[[67,[[134,[133]]]]]],[[9,[73,[72]]],[[67,[[134,[133]]]]]],[[9,[73,[72]]],2],[[9,[73,[72]]],2],[[[184,[183]],9,9,135],[[2,[136]]]],[[[184,[183]],9,137],[[2,[138]]]],[9,2],[9,2],[[[184,[183]],9,139],[[2,[140]]]],[9,[[2,[[10,[[56,[72]]]]]]]],[9,[[2,[[10,[[56,[72]]]]]]]],[[[184,[183]],9,141],2],[[[184,[183]],9,142],2],[[[184,[183]],9,9,143],[[2,[144]]]],[9,[[2,[[56,[44]]]]]],[9,[[2,[[56,[44]]]]]],[[9,[73,[72]]],2],[[9,[73,[72]]],2],[[[184,[183]],9,145],[[2,[146]]]],[[[184,[183]],9,126],2],[[]],[[]],[[]],[[]],[166,16],[[[184,[[0,[185,183]]]]],[[184,[[0,[185,183]]]]]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[[184,[183]],9,9,135],[[67,[[134,[133]]]]]],[[[184,[183]],9,137],[[67,[[134,[133]]]]]],[9,[[67,[[134,[133]]]]]],[[[184,[183]],9,139],[[67,[[134,[133]]]]]],[27],[27],[27],[27],[27],[27],[[[184,[[0,[164,183]]]],33],34],[[]],[[]],[[]],[9,[[67,[[134,[133]]]]]],[[[184,[183]]],152],[[],27],[[],27],[[]],[[]],[[],51],[[],51],[[[184,[183]],9,141],[[67,[[134,[133]]]]]],[[],166],[166,9],[[15,9,16],166],[183,[[184,[183]]]],[[[184,[183]],9,142],[[67,[[134,[133]]]]]],[[[184,[183]],9,9,143],[[67,[[134,[133]]]]]],[9,[[67,[[134,[133]]]]]],[9,[[67,[[134,[133]]]]]],[166,15],[[9,[73,[72]]],[[67,[[134,[133]]]]]],[[[184,[183]],9,145],[[67,[[134,[133]]]]]],[[]],[[],46],[[],46],[[],46],[[],46],[[],96],[[],96],[[]],[[]],[[[184,[183]],9],[[184,[183]]]],[[[184,[183]],9,126],[[67,[[134,[133]]]]]],0,0,0,0,0,[[[187,[186]],9,9,135],[[2,[136]]]],[[[187,[186]],9,137],[[2,[138]]]],[9,2],[[[187,[186]],9,139],[[2,[140]]]],[9,[[2,[[10,[188]]]]]],[[[187,[186]],9,141],2],[[[187,[186]],9,142],2],[[[187,[186]],9,9,143],[[2,[144]]]],[9,[[2,[[56,[44]]]]]],[9,[[2,[[56,[44]]]]]],[[9,188],2],[[[187,[186]],9,145],[[2,[146]]]],[[[187,[186]],9,126],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[189,190],[188,188],[190,190],[[[187,[[0,[185,186]]]]],[[187,[[0,[185,186]]]]]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[[187,[186]],9,9,135],[[67,[[134,[133]]]]]],[[[187,[186]],9,137],[[67,[[134,[133]]]]]],[[],190],[9,[[67,[[134,[133]]]]]],[[[187,[186]],9,139],[[67,[[134,[133]]]]]],0,[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[[188,33],34],[[190,33],34],[[[187,[[0,[164,186]]]],33],34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,[[67,[[134,[133]]]]]],0,[[],189],[[[187,[186]]],152],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[],51],[[],51],[[],51],[[],51],[[[187,[186]],9,141],[[67,[[134,[133]]]]]],0,[189,9],[[15,9,190],189],[186,[[187,[186]]]],[[],188],[[[187,[186]],9,142],[[67,[[134,[133]]]]]],[[[187,[186]],9,9,143],[[67,[[134,[133]]]]]],[9,[[67,[[134,[133]]]]]],[9,[[67,[[134,[133]]]]]],0,[189,15],[[9,188],[[67,[[134,[133]]]]]],0,[188,27],[[[187,[186]],9,145],[[67,[[134,[133]]]]]],[[]],[[]],[[]],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],96],[[],96],[[],96],[[],96],0,[[]],[[]],[[]],[[]],[[[187,[186]],9],[[187,[186]]]],[[[187,[186]],9,126],[[67,[[134,[133]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[67,[[134,[133]]]]]],[[[192,[191,191]]],[[67,[[134,[133]]]]]],[[[194,[193]]],[[67,[[134,[133]]]]]],[[[196,[195]]],[[67,[[134,[133]]]]]],[9,[[67,[[134,[133]]]]]],[[19,19,130],[[67,[[134,[133]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[197],[198,198],[199,199],[200,200],[201,201],[[]],[[]],[[]],[[]],[[],2],[[],[[67,[[134,[133]]]]]],[[[192,[191,191]]],[[67,[[134,[133]]]]]],[[[194,[193]]],[[67,[[134,[133]]]]]],[[[196,[195]]],[[67,[[134,[133]]]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[9,[73,[202]]],[[67,[[134,[133]]]]]],[[],197],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[[198,198],28],[[199,199],28],[[200,200],28],[[201,201],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],0,[[198,33],34],[[198,33],34],[[199,33],34],[[199,33],34],[[200,33],34],[[200,33],34],[[201,33],34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[56,[72]]],203],[66,203],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[47,48]],49],19],[[[0,[47,48]],49],19],[[[0,[47,48]],49],19],[[198,50]],[[199,50]],[[200,50]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],[[67,[[134,[133]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[29,9,27],[[204,[29]]]],[9,205],[[19,19],206],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[[207,[29]],9,19,19],[[208,[29]]]],[198,9],[199,9],[200,9],[[[0,[91,22,23,24]]],[[0,[[0,[91,22,23,24]]]]]],[[[0,[21,22,23,24]]],[[0,[[0,[21,22,23,24]]]]]],[27,209],[203,28],[197,28],[197,27],[201,11],[[210,19,19],[[2,[[206,[0]]]]]],[[193,[10,[19]]],[[194,[193]]]],[195,[[196,[195]]]],[[],197],[[9,8],201],[[],[[10,[[2,[66]]]]]],[[],[[2,[[10,[[56,[201]]]]]]]],[[],[[67,[[134,[133]]]]]],0,0,[211,10],[[[209,[211]]],[[10,[[2,[66]]]]]],[[[208,[29,211]]],[[10,[[2,[66]]]]]],[[[206,[[0,[212,213,22,23]]]]],[[10,[[2,[66]]]]]],[214,[[67,[[134,[133]]]]]],[215,[[2,[[10,[[56,[201]]]]]]]],[[[204,[29,216]]],[[2,[[10,[[56,[201]]]]]]]],[[[204,[29,217]]],[[67,[[134,[133]]]]]],[[[205,[216]]],[[2,[[10,[[56,[201]]]]]]]],[[[205,[217]]],[[67,[[134,[133]]]]]],[203,[[10,[[2,[66]]]]]],[[],[[67,[[134,[133]]]]]],0,[201,9],[197,66],[[197,27],66],[[197,27],66],[68,[[69,[[10,[[2,[66]]]]]]]],[68,[[69,[[10,[[2,[66]]]]]]]],[[[67,[218]],68],[[69,[10]]]],[[[209,[218]],68],[[69,[[10,[[2,[66]]]]]]]],[[[208,[29,218]],68],[[69,[[10,[[2,[66]]]]]]]],[[[206,[[0,[21,219,24,22,23]]]],68],[[69,[[10,[[2,[66]]]]]]]],[[[67,[220]],68],[[69,[10]]]],[[203,68],[[69,[[10,[[2,[66]]]]]]]],[[68,[73,[72]]],[[69,[[2,[27]]]]]],[[[67,[218]],68,[73,[72]]],[[69,[[31,[27]]]]]],[[[209,[218]],68,[73,[72]]],[[69,[[2,[27]]]]]],[[[208,[29,218]],68,[73,[72]]],[[69,[[2,[27]]]]]],[[[206,[[0,[21,219,24,22,23]]]],68,[73,[72]]],[[69,[[2,[27]]]]]],[[203,68,[73,[72]]],[[69,[[2,[27]]]]]],[[68,74],[[69,[[2,[19]]]]]],[[[67,[218]],68,74],[[69,[[31,[19]]]]]],[[[209,[218]],68,74],[[69,[[2,[19]]]]]],[[[208,[29,218]],68,74],[[69,[[2,[19]]]]]],[[[206,[[0,[21,219,24,22,23]]]],68,74],[[69,[[2,[19]]]]]],[[203,68,74],[[69,[[2,[19]]]]]],[197],[[197,66]],[[[73,[72]]],[[2,[27]]]],0,0,[[211,[73,[72]]],[[31,[27]]]],[[[209,[211]],[73,[72]]],[[2,[27]]]],[[[208,[29,211]],[73,[72]]],[[2,[27]]]],[[[206,[[0,[212,213,22,23]]]],[73,[72]]],[[2,[27]]]],[[203,[73,[72]]],[[2,[27]]]],[203,[[73,[72]]]],[74,[[2,[19]]]],0,0,[[211,74],[[31,[19]]]],[[[209,[211]],74],[[2,[19]]]],[[[208,[29,211]],74],[[2,[19]]]],[[[206,[[0,[212,213,22,23]]]],74],[[2,[19]]]],[[203,74],[[2,[19]]]],[[201,11],201],[[201,9],201],[[19,172],[[67,[[134,[133]]]]]],[[[192,[191,191]],19,172],[[67,[[134,[133]]]]]],[[[194,[193]],19,172],[[67,[[134,[133]]]]]],[[[196,[195]],19,172],[[67,[[134,[133]]]]]],[[197,27]],[[]],[[]],[[]],[[]],[[],44],[[],44],[[],44],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[44,8],201],[[[194,[193]],27],[[194,[193]]]],[[[196,[195]],27],[[196,[195]]]],[66,2],[66,[[67,[[134,[133]]]]]],[[[192,[191,191]],66],[[67,[[134,[133]]]]]],[[[194,[193]],66],[[67,[[134,[133]]]]]],[[[196,[195]],66],[[67,[[134,[133]]]]]],[[19,130],[[67,[[134,[133]]]]]],[[9,27,19,130],[[67,[[134,[133]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[221,9],221],[[222,9],222],[[223,9],223],[[224,9],224],[[222,9],222],[[225,9],225],[[226,9],226],[[227,9],227],[[228,9],228],[[229,9],229],[[230,9],230],[[229,9],229],[[230,9],230],[223,223],[[231,9],231],[[229,27],229],[[222,27],222],[[223,27],223],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[232,9],232],[[233,9],233],[[221,9],221],[[222,9],222],[[223,9],223],[[234,9],234],[[224,9],224],[229,2],[230,2],[232,2],[235,2],[236,2],[231,2],[237,2],[233,2],[238,2],[239,2],[240,2],[241,2],[242,2],[243,2],[244,2],[245,2],[246,2],[221,2],[222,2],[247,2],[248,2],[249,2],[250,2],[223,2],[251,2],[252,2],[234,2],[224,2],[253,2],[254,2],[225,2],[226,2],[227,2],[228,2],[255,2],[256,2],[257,2],[258,2],[[236,9],236],[[256,9],256],[[236,9],236],[[256,9],256],[[227,9],227],[[227,9],227],[229,229],[230,230],[232,232],[236,236],[241,241],[243,243],[221,221],[249,249],[250,250],[254,254],[256,256],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[249,9],249],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[257,9],257],[[258,9],258],[[229,9],229],[[233,9],233],[[233,9],233],[[223,[134,[259]]],223],[[224,[134,[259]]],224],[[233,[134,[260]]],233],[[247,9],247],[[250,9],250],[[252,9],252],[[255,9],255],[[248,9],248],[[249,177],249],[[],229],[[],230],[[],232],[[],235],[[],236],[[],231],[[],237],[[],233],[[],238],[[],239],[[],240],[[],241],[[],242],[[],243],[[],244],[[],245],[[],246],[[],221],[[],222],[[],247],[[],248],[[],249],[[],250],[[],223],[[],251],[[],252],[[],234],[[],224],[[],253],[[],254],[[],225],[[],226],[[],227],[[],228],[[],255],[[],256],[[],257],[[],258],[[233,9],233],[[223,9],223],[[224,9],224],[[243,75],243],[[249,75],249],[[254,9],254],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[[9,9],[[10,[44]]]],[232,232],[223,223],[224,224],[223,223],[224,224],[254,254],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[[251,28],251],[238,238],[231,231],[223,223],[224,224],[[229,9],229],[[229,9],229],[[229,9],229],[[229,9],229],[[230,9],230],[[232,9],232],[[237,9],237],[[233,9],233],[[240,9],240],[[241,9],241],[[242,9],242],[[243,9],243],[[221,9],221],[[222,9],222],[[249,9],249],[[223,9],223],[[251,9],251],[[234,9],234],[[224,9],224],[[253,9],253],[[254,9],254],[[236,9],236],[[256,[56,[44]]],256],[[223,9],223],[[224,9],224],[[230,9],230],[[229,33],34],[[230,33],34],[[232,33],34],[[236,33],34],[[231,33],34],[[237,33],34],[[233,33],34],[[238,33],34],[[239,33],34],[[240,33],34],[[241,33],34],[[242,33],34],[[245,33],34],[[246,33],34],[[221,33],34],[[222,33],34],[[249,33],34],[[250,33],34],[[223,33],34],[[251,33],34],[[234,33],34],[[224,33],34],[[253,33],34],[[254,33],34],[[225,33],34],[[226,33],34],[[227,33],34],[[258,33],34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,[[2,[229]]]],[[[45,[44,44]]],229],[[[45,[44,44]]],230],[[[45,[44,44]]],232],[[[45,[44,44]]],235],[[[45,[44,44]]],236],[[[45,[44,44]]],231],[[[45,[44,44]]],237],[[[45,[44,44]]],233],[[[45,[44,44]]],238],[[[45,[44,44]]],239],[[[45,[44,44]]],240],[[[45,[44,44]]],241],[[[45,[44,44]]],242],[[[45,[44,44]]],243],[[[45,[44,44]]],244],[[[45,[44,44]]],245],[[[45,[44,44]]],246],[[[45,[44,44]]],221],[[[45,[44,44]]],222],[[[45,[44,44]]],247],[[[45,[44,44]]],248],[[[45,[44,44]]],249],[[[45,[44,44]]],250],[[[45,[44,44]]],223],[[[45,[44,44]]],251],[[[45,[44,44]]],252],[[[45,[44,44]]],234],[[[45,[44,44]]],224],[[[45,[44,44]]],253],[[[45,[44,44]]],254],[[[45,[44,44]]],225],[[[45,[44,44]]],226],[[[45,[44,44]]],227],[[[45,[44,44]]],228],[[[45,[44,44]]],255],[[[45,[44,44]]],256],[[[45,[44,44]]],257],[[[45,[44,44]]],258],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[229,148],229],[[230,148],230],[[232,148],232],[[233,148],233],[[238,148],238],[[240,148],240],[[241,148],241],[[242,148],242],[[221,148],221],[[222,148],222],[[223,148],223],[[234,148],234],[[224,148],224],[[253,148],253],[[225,148],225],[[226,148],226],[[227,148],227],[[228,148],228],[[248,9],248],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[256,256],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[239,9],239],[[251,9],251],[[234,9],234],[[258,9],258],[[236,9],236],[[256,9],256],[[251,9],251],[[245,19],245],[[246,19],246],[[246,9],246],[[239,9],239],[[236,9],236],[[237,9],237],[[240,9],240],[[249,9],249],[[253,9],253],[[233,9],233],[[222,9],222],[[227,9],227],[[223,9],223],[[224,9],224],[[223,9],223],[[224,9],224],[[229,9],229],[[230,9],230],[[232,9],232],[[235,9],235],[[236,9],236],[[231,9],231],[[237,9],237],[[233,9],233],[[238,9],238],[[239,9],239],[[240,9],240],[[241,9],241],[[242,9],242],[[243,9],243],[[244,9],244],[[221,9],221],[[222,9],222],[[249,9],249],[[250,9],250],[[223,9],223],[[251,9],251],[[252,9],252],[[234,9],234],[[224,9],224],[[253,9],253],[[254,9],254],[[225,9],225],[[226,9],226],[[227,9],227],[[255,9],255],[[257,9],257],[[258,9],258],[[229,9],229],[[233,9],233],[[221,9],221],[[223,9],223],[[224,9],224],[[232,9],232],[[232,9],232],[[223,9],223],[[224,9],224],[[248,9],248],[[246,27],246],[[222,9],222],[[223,9],223],[[224,9],224],[[223,9],223],[[224,9],224],[[223,9],223],[[224,9],224],[[223,9],223],[[224,9],224],[[223,9],223],[[224,9],224],[[222,9],222],[223,223],[224,224],[[229,[73,[72]]],229],[[223,9,[73,[72]]],223],[[224,9,[73,[72]]],224],[[223,9],223],[[224,9],224],[223,223],[224,224],[[233,9],233],[[255,9],255],[[258,9],258],[[246,28],246],[[245,75],245],[[246,75],246],[[245,75],245],[[246,75],246],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[240,9],240],[[253,9],253],[[252,9],252],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[237,9],237],[[239,9],239],[[251,9],251],[[236,9],236],[[240,9],240],[[249,9],249],[[253,9],253],[[258,9],258],[[238,9],238],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[233,27],233],[[232,27],232],[[221,27],221],[[222,27],222],[[223,27],223]],"c":[],"p":[[3,"Writer"],[6,"Result"],[4,"Metakey"],[3,"FlagSet"],[8,"Into"],[3,"Operator"],[3,"BlockingOperator"],[3,"Metadata"],[15,"str"],[4,"Option"],[4,"EntryMode"],[3,"Entry"],[3,"OperatorInfo"],[4,"ErrorKind"],[4,"Scheme"],[3,"Capability"],[3,"BlockingWriter"],[3,"Compat"],[15,"u64"],[3,"BytesContentRange"],[8,"AsyncRead"],[8,"Send"],[8,"Sync"],[8,"Unpin"],[3,"FutureDelete"],[3,"FunctionDelete"],[15,"usize"],[15,"bool"],[8,"Accessor"],[3,"OperatorBuilder"],[6,"Result"],[3,"Error"],[3,"Formatter"],[6,"Result"],[3,"RedisError"],[4,"Error"],[4,"Error"],[4,"FtpError"],[3,"Error"],[3,"Error"],[4,"Error"],[3,"Error"],[3,"MetaData"],[3,"String"],[3,"HashMap"],[4,"Result"],[8,"Hash"],[8,"Sized"],[8,"BuildHasher"],[8,"Hasher"],[3,"Request"],[3,"Utc"],[3,"DateTime"],[8,"Layer"],[6,"FusedAccessor"],[3,"Vec"],[3,"FutureList"],[3,"FunctionList"],[3,"Lister"],[3,"BlockingLister"],[3,"FutureLister"],[3,"FunctionLister"],[8,"FnOnce"],[8,"Builder"],[3,"BlockingReader"],[3,"Bytes"],[3,"Pin"],[3,"Context"],[4,"Poll"],[3,"Reader"],[3,"ReadBuf"],[15,"u8"],[15,"slice"],[4,"SeekFrom"],[3,"Duration"],[3,"PresignedRequest"],[3,"FuturePresignRead"],[3,"FuturePresignWrite"],[3,"Demand"],[8,"RangeBounds"],[4,"NotKeyed"],[8,"DirectStateStore"],[8,"Clock"],[8,"ReasonablyRealtime"],[8,"RateLimitingMiddleware"],[3,"RateLimiter"],[3,"RatelimitedStream"],[3,"Jitter"],[3,"FutureRead"],[3,"FutureReader"],[8,"Stream"],[8,"Iterator"],[3,"Error"],[8,"Error"],[3,"FutureStat"],[3,"TypeId"],[3,"Error"],[3,"FutureWrite"],[3,"FunctionWrite"],[3,"FutureWriter"],[3,"RetryLayer"],[3,"ConcurrentLimitLayer"],[3,"ImmutableIndexLayer"],[3,"LoggingLayer"],[3,"TimeoutLayer"],[3,"BlockingLayer"],[3,"ChaosLayer"],[3,"MetricsLayer"],[3,"PrometheusLayer"],[3,"MadsimLayer"],[3,"MadsimServer"],[3,"ThrottleLayer"],[3,"AwaitTreeLayer"],[3,"AsyncBacktraceLayer"],[8,"IntoIterator"],[8,"RetryInterceptor"],[3,"TracingLayer"],[3,"MinitraceLayer"],[3,"OtelTraceLayer"],[15,"f64"],[15,"u32"],[4,"SocketAddr"],[15,"f32"],[3,"Registry"],[3,"BytesRange"],[3,"OpWrite"],[8,"Part"],[3,"Multipart"],[3,"Builder"],[4,"AsyncBody"],[3,"Request"],[3,"OpBatch"],[8,"Future"],[3,"Box"],[3,"OpCopy"],[3,"RpCopy"],[3,"OpCreateDir"],[3,"RpCreateDir"],[3,"OpDelete"],[3,"RpDelete"],[3,"OpList"],[3,"OpRead"],[3,"OpRename"],[3,"RpRename"],[3,"OpStat"],[3,"RpStat"],[3,"ClientBuilder"],[3,"HttpClient"],[3,"HeaderValue"],[3,"IncomingAsyncBody"],[3,"Client"],[3,"AccessorInfo"],[4,"Operation"],[3,"RpList"],[3,"RpPresign"],[3,"RpRead"],[3,"RpWrite"],[3,"OpPresign"],[4,"PresignOperation"],[4,"BatchOperation"],[3,"FormDataPart"],[3,"MixedPart"],[8,"Deserializer"],[8,"Debug"],[4,"BatchedReply"],[3,"Metadata"],[3,"HeaderMap"],[3,"HeaderName"],[3,"Response"],[3,"RpBatch"],[3,"Method"],[6,"Streamer"],[3,"Uri"],[3,"Error"],[3,"Error"],[4,"DeError"],[15,"i64"],[3,"Range"],[3,"RangeInclusive"],[8,"Serializer"],[3,"Version"],[3,"Parts"],[8,"Adapter"],[3,"Backend"],[8,"Clone"],[8,"Adapter"],[3,"Backend"],[3,"Value"],[3,"Info"],[3,"Capability"],[8,"Write"],[4,"TwoWaysWriter"],[8,"MultipartUploadWrite"],[3,"MultipartUploadWriter"],[8,"AppendObjectWrite"],[3,"AppendObjectWriter"],[3,"VectorCursor"],[4,"ReadOperation"],[4,"WriteOperation"],[4,"PageOperation"],[3,"Entry"],[3,"MultipartUploadPart"],[3,"Cursor"],[3,"FlatPager"],[3,"HierarchyPager"],[3,"FromFileReader"],[3,"Arc"],[3,"ByRangeSeekableReader"],[3,"StreamableReader"],[3,"File"],[8,"BlockingRead"],[8,"Read"],[8,"Seek"],[6,"Pager"],[6,"BlockingPager"],[8,"BlockingPage"],[8,"Page"],[8,"Read"],[8,"AsyncSeek"],[8,"Stream"],[3,"Obs"],[3,"Oss"],[3,"S3"],[3,"Wasabi"],[3,"Onedrive"],[3,"Gdrive"],[3,"Dropbox"],[3,"VercelArtifacts"],[3,"Azblob"],[3,"Azdfs"],[3,"Fs"],[3,"Cos"],[3,"Gcs"],[3,"Supabase"],[3,"Dashmap"],[3,"Etcd"],[3,"Ftp"],[3,"Ghac"],[3,"Hdfs"],[3,"Http"],[3,"Ipfs"],[3,"Ipmfs"],[3,"Memcached"],[3,"Memory"],[3,"MiniMoka"],[3,"Moka"],[3,"Cacache"],[3,"Persy"],[3,"Redis"],[3,"Rocksdb"],[3,"Sftp"],[3,"Sled"],[3,"Webdav"],[3,"Webhdfs"],[3,"Redb"],[3,"Tikv"],[3,"Foundationdb"],[3,"Postgresql"],[8,"CredentialLoad"],[8,"TokenLoad"],[8,"LayeredAccessor"],[8,"BlockingWrite"],[8,"ReadExt"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
